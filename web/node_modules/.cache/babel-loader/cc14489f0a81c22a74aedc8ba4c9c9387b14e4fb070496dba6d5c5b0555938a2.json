{"ast":null,"code":"var _jsxFileName = \"/Users/habeebsait/Apps/food_app/web/src/pages/RecipeDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport Navigation from '../components/Navigation';\nimport { parseRecipeSlug, generateMyRecipesUrl, getUsernameForUrl } from '../utils/urlUtils';\nimport './RecipeDetail.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecipeDetail() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [recipe, setRecipe] = useState(null);\n  const [recipeOwnerProfile, setRecipeOwnerProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isSaved, setIsSaved] = useState(false);\n  const [saveLoading, setSaveLoading] = useState(false);\n  const {\n    username,\n    recipeSlug\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function loadRecipeAndUser() {\n      try {\n        // Parse recipe ID from slug\n        const recipeId = parseRecipeSlug(recipeSlug);\n        if (!recipeId) {\n          setError('Invalid recipe URL');\n          setLoading(false);\n          return;\n        }\n\n        // Check authentication\n        const {\n          data: {\n            user: currentUser\n          }\n        } = await supabase.auth.getUser();\n        setUser(currentUser);\n\n        // Load current user's profile if authenticated\n        if (currentUser) {\n          const {\n            data: userProfile,\n            error: profileError\n          } = await supabase.from('profiles').select('username, full_name').eq('id', currentUser.id).single();\n          if (!profileError) {\n            setProfile(userProfile);\n          }\n        }\n\n        // Load the recipe\n        const {\n          data: recipeData,\n          error: recipeError\n        } = await supabase.from('user_recipes').select(`\n            id,\n            title,\n            category,\n            ingredients,\n            steps,\n            image_url,\n            created_at,\n            updated_at,\n            user_id,\n            profiles!user_recipes_user_id_fkey (\n              username,\n              full_name\n            )\n          `).eq('id', recipeId).single();\n        if (recipeError) {\n          if (recipeError.code === 'PGRST116') {\n            setError('Recipe not found');\n          } else {\n            throw recipeError;\n          }\n          setLoading(false);\n          return;\n        }\n        setRecipe(recipeData);\n        setRecipeOwnerProfile(recipeData.profiles);\n\n        // Verify that the username in the URL matches the recipe owner\n        const recipeOwnerUsername = getUsernameForUrl({\n          id: recipeData.user_id\n        }, recipeData.profiles);\n        if (username !== recipeOwnerUsername) {\n          // Redirect to the correct URL\n          const correctSlug = `${recipeData.title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-+|-+$/g, '')}-${recipeData.id}`;\n          navigate(`/${recipeOwnerUsername}/my-recipes/${correctSlug}`, {\n            replace: true\n          });\n          return;\n        }\n\n        // Check if recipe is saved by current user (if authenticated)\n        if (currentUser) {\n          const {\n            data: savedData,\n            error: savedError\n          } = await supabase.from('saved_recipes').select('id').eq('user_id', currentUser.id).eq('user_recipe_id', recipeData.id).maybeSingle();\n          if (savedData && !savedError) {\n            setIsSaved(true);\n          }\n        }\n      } catch (err) {\n        console.error('Error loading recipe:', err);\n        setError(`Failed to load recipe: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadRecipeAndUser();\n  }, [username, recipeSlug, navigate]);\n  const handleSaveRecipe = async () => {\n    if (!user) {\n      alert('Please sign in to save recipes');\n      return;\n    }\n    if (!recipe) return;\n    try {\n      setSaveLoading(true);\n\n      // First, we need to ensure this recipe exists in the public recipes table\n      // or create it if it doesn't exist (for saving user recipes)\n      let publicRecipeId = null;\n\n      // Check if recipe already exists in recipes table\n      const {\n        data: existingRecipe,\n        error: checkError\n      } = await supabase.from('recipes').select('id').eq('title', recipe.title).eq('category', recipe.category).single();\n      if (existingRecipe) {\n        publicRecipeId = existingRecipe.id;\n      } else {\n        // Create a public recipe entry for this user recipe\n        const {\n          data: newRecipe,\n          error: createError\n        } = await supabase.from('recipes').insert([{\n          title: recipe.title,\n          image_url: recipe.image_url,\n          ingredients: Array.isArray(recipe.ingredients) ? recipe.ingredients.join('\\n') : recipe.ingredients,\n          steps: Array.isArray(recipe.steps) ? recipe.steps.join('\\n') : recipe.steps,\n          category: recipe.category,\n          category_id: recipe.category_id,\n          is_public: false // Keep it private initially\n        }]).select('id').single();\n        if (createError) throw createError;\n        publicRecipeId = newRecipe.id;\n      }\n      if (isSaved) {\n        // Remove from saved recipes\n        const {\n          error\n        } = await supabase.from('saved_recipes').delete().eq('user_id', user.id).eq('recipe_id', publicRecipeId);\n        if (error) throw error;\n        setIsSaved(false);\n      } else {\n        // Add to saved recipes\n        const {\n          error\n        } = await supabase.from('saved_recipes').insert([{\n          user_id: user.id,\n          recipe_id: publicRecipeId,\n          category: recipe.category\n        }]);\n        if (error) throw error;\n        setIsSaved(true);\n      }\n    } catch (err) {\n      console.error('Error saving recipe:', err);\n      alert(`Failed to ${isSaved ? 'remove' : 'save'} recipe: ${err.message}`);\n    } finally {\n      setSaveLoading(false);\n    }\n  };\n  const isOwner = user && recipe && user.id === recipe.user_id;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-detail-page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-detail-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading recipe...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  if (error || !recipe) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-detail-page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-detail-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Recipe Not Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: error || 'The recipe you\\'re looking for doesn\\'t exist.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"recipe-btn recipe-btn-primary\",\n              onClick: () => navigate('/'),\n              children: \"Back to Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-detail-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-detail-container\",\n        children: [recipe.image_url && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-hero\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: recipe.image_url,\n            alt: recipe.title,\n            className: \"recipe-hero-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-title-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"recipe-title\",\n              children: recipe.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"recipe-author\",\n              children: [\"By \", (recipeOwnerProfile === null || recipeOwnerProfile === void 0 ? void 0 : recipeOwnerProfile.full_name) || (recipeOwnerProfile === null || recipeOwnerProfile === void 0 ? void 0 : recipeOwnerProfile.username) || 'Chef Anonymous']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-actions\",\n            children: [user && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `action-btn save-btn ${isSaved ? 'saved' : ''}`,\n              onClick: handleSaveRecipe,\n              disabled: saveLoading,\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"20\",\n                height: \"20\",\n                viewBox: \"0 0 24 24\",\n                fill: isSaved ? \"currentColor\" : \"none\",\n                stroke: \"currentColor\",\n                strokeWidth: \"2\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 19\n              }, this), saveLoading ? 'Saving...' : isSaved ? 'Saved' : 'Save']\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"action-btn share-btn\",\n              children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n                width: \"20\",\n                height: \"20\",\n                viewBox: \"0 0 24 24\",\n                fill: \"currentColor\",\n                children: /*#__PURE__*/_jsxDEV(\"path\", {\n                  d: \"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.50-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92S21 19.61 21 18s-1.31-2.92-2.92-2.92z\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this), \"Share\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-content\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-sections\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredients-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"section-title\",\n                children: \"Ingredients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                className: \"ingredients-list\",\n                children: recipe.ingredients && recipe.ingredients.length > 0 ? recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"ingredient-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ingredient-bullet\",\n                    children: \"\\u2022\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"ingredient-text\",\n                    children: ingredient\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"empty-message\",\n                  children: \"No ingredients listed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"instructions-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"section-title\",\n                children: \"Instructions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n                className: \"instructions-list\",\n                children: recipe.steps && recipe.steps.length > 0 ? recipe.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"instruction-item\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"instruction-number\",\n                    children: [index + 1, \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 310,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"instruction-text\",\n                    children: step\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 25\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 23\n                }, this)) : /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: \"empty-message\",\n                  children: \"No instructions provided\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RecipeDetail, \"2d8LytulneONCoCD1WdYWSXetvA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RecipeDetail;\nexport default RecipeDetail;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","supabase","Navigation","parseRecipeSlug","generateMyRecipesUrl","getUsernameForUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipeDetail","_s","user","setUser","profile","setProfile","recipe","setRecipe","recipeOwnerProfile","setRecipeOwnerProfile","loading","setLoading","error","setError","isSaved","setIsSaved","saveLoading","setSaveLoading","username","recipeSlug","navigate","loadRecipeAndUser","recipeId","data","currentUser","auth","getUser","userProfile","profileError","from","select","eq","id","single","recipeData","recipeError","code","profiles","recipeOwnerUsername","user_id","correctSlug","title","toLowerCase","replace","savedData","savedError","maybeSingle","err","console","message","handleSaveRecipe","alert","publicRecipeId","existingRecipe","checkError","category","newRecipe","createError","insert","image_url","ingredients","Array","isArray","join","steps","category_id","is_public","delete","recipe_id","isOwner","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","src","alt","full_name","disabled","width","height","viewBox","fill","stroke","strokeWidth","d","length","map","ingredient","index","step","_c","$RefreshReg$"],"sources":["/Users/habeebsait/Apps/food_app/web/src/pages/RecipeDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport Navigation from '../components/Navigation';\nimport { parseRecipeSlug, generateMyRecipesUrl, getUsernameForUrl } from '../utils/urlUtils';\nimport './RecipeDetail.css';\n\nfunction RecipeDetail() {\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [recipe, setRecipe] = useState(null);\n  const [recipeOwnerProfile, setRecipeOwnerProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isSaved, setIsSaved] = useState(false);\n  const [saveLoading, setSaveLoading] = useState(false);\n  \n  const { username, recipeSlug } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function loadRecipeAndUser() {\n      try {\n        // Parse recipe ID from slug\n        const recipeId = parseRecipeSlug(recipeSlug);\n        if (!recipeId) {\n          setError('Invalid recipe URL');\n          setLoading(false);\n          return;\n        }\n\n        // Check authentication\n        const { data: { user: currentUser } } = await supabase.auth.getUser();\n        setUser(currentUser);\n\n        // Load current user's profile if authenticated\n        if (currentUser) {\n          const { data: userProfile, error: profileError } = await supabase\n            .from('profiles')\n            .select('username, full_name')\n            .eq('id', currentUser.id)\n            .single();\n\n          if (!profileError) {\n            setProfile(userProfile);\n          }\n        }\n\n        // Load the recipe\n        const { data: recipeData, error: recipeError } = await supabase\n          .from('user_recipes')\n          .select(`\n            id,\n            title,\n            category,\n            ingredients,\n            steps,\n            image_url,\n            created_at,\n            updated_at,\n            user_id,\n            profiles!user_recipes_user_id_fkey (\n              username,\n              full_name\n            )\n          `)\n          .eq('id', recipeId)\n          .single();\n\n        if (recipeError) {\n          if (recipeError.code === 'PGRST116') {\n            setError('Recipe not found');\n          } else {\n            throw recipeError;\n          }\n          setLoading(false);\n          return;\n        }\n\n        setRecipe(recipeData);\n        setRecipeOwnerProfile(recipeData.profiles);\n\n        // Verify that the username in the URL matches the recipe owner\n        const recipeOwnerUsername = getUsernameForUrl(\n          { id: recipeData.user_id }, \n          recipeData.profiles\n        );\n        \n        if (username !== recipeOwnerUsername) {\n          // Redirect to the correct URL\n          const correctSlug = `${recipeData.title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-+|-+$/g, '')}-${recipeData.id}`;\n          navigate(`/${recipeOwnerUsername}/my-recipes/${correctSlug}`, { replace: true });\n          return;\n        }\n\n        // Check if recipe is saved by current user (if authenticated)\n        if (currentUser) {\n          const { data: savedData, error: savedError } = await supabase\n            .from('saved_recipes')\n            .select('id')\n            .eq('user_id', currentUser.id)\n            .eq('user_recipe_id', recipeData.id)\n            .maybeSingle();\n\n          if (savedData && !savedError) {\n            setIsSaved(true);\n          }\n        }\n\n      } catch (err) {\n        console.error('Error loading recipe:', err);\n        setError(`Failed to load recipe: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    loadRecipeAndUser();\n  }, [username, recipeSlug, navigate]);\n\n  const handleSaveRecipe = async () => {\n    if (!user) {\n      alert('Please sign in to save recipes');\n      return;\n    }\n\n    if (!recipe) return;\n\n    try {\n      setSaveLoading(true);\n\n      // First, we need to ensure this recipe exists in the public recipes table\n      // or create it if it doesn't exist (for saving user recipes)\n      let publicRecipeId = null;\n      \n      // Check if recipe already exists in recipes table\n      const { data: existingRecipe, error: checkError } = await supabase\n        .from('recipes')\n        .select('id')\n        .eq('title', recipe.title)\n        .eq('category', recipe.category)\n        .single();\n\n      if (existingRecipe) {\n        publicRecipeId = existingRecipe.id;\n      } else {\n        // Create a public recipe entry for this user recipe\n        const { data: newRecipe, error: createError } = await supabase\n          .from('recipes')\n          .insert([{\n            title: recipe.title,\n            image_url: recipe.image_url,\n            ingredients: Array.isArray(recipe.ingredients) ? recipe.ingredients.join('\\n') : recipe.ingredients,\n            steps: Array.isArray(recipe.steps) ? recipe.steps.join('\\n') : recipe.steps,\n            category: recipe.category,\n            category_id: recipe.category_id,\n            is_public: false // Keep it private initially\n          }])\n          .select('id')\n          .single();\n\n        if (createError) throw createError;\n        publicRecipeId = newRecipe.id;\n      }\n\n      if (isSaved) {\n        // Remove from saved recipes\n        const { error } = await supabase\n          .from('saved_recipes')\n          .delete()\n          .eq('user_id', user.id)\n          .eq('recipe_id', publicRecipeId);\n\n        if (error) throw error;\n        setIsSaved(false);\n      } else {\n        // Add to saved recipes\n        const { error } = await supabase\n          .from('saved_recipes')\n          .insert([{\n            user_id: user.id,\n            recipe_id: publicRecipeId,\n            category: recipe.category\n          }]);\n\n        if (error) throw error;\n        setIsSaved(true);\n      }\n    } catch (err) {\n      console.error('Error saving recipe:', err);\n      alert(`Failed to ${isSaved ? 'remove' : 'save'} recipe: ${err.message}`);\n    } finally {\n      setSaveLoading(false);\n    }\n  };\n\n  const isOwner = user && recipe && user.id === recipe.user_id;\n\n  if (loading) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"recipe-detail-page\">\n          <div className=\"recipe-detail-container\">\n            <div className=\"loading-state\">\n              <div className=\"spinner\"></div>\n              <p>Loading recipe...</p>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  if (error || !recipe) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"recipe-detail-page\">\n          <div className=\"recipe-detail-container\">\n            <div className=\"error-state\">\n              <h2>Recipe Not Found</h2>\n              <p>{error || 'The recipe you\\'re looking for doesn\\'t exist.'}</p>\n              <button \n                className=\"recipe-btn recipe-btn-primary\"\n                onClick={() => navigate('/')}\n              >\n                Back to Home\n              </button>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Navigation />\n      <div className=\"recipe-detail-page\">\n        <div className=\"recipe-detail-container\">\n          {/* Hero Image Section */}\n          {recipe.image_url && (\n            <div className=\"recipe-hero\">\n              <img \n                src={recipe.image_url} \n                alt={recipe.title}\n                className=\"recipe-hero-image\"\n              />\n            </div>\n          )}\n\n          {/* Recipe Header */}\n          <div className=\"recipe-header\">\n            <div className=\"recipe-title-section\">\n              <h1 className=\"recipe-title\">{recipe.title}</h1>\n              <p className=\"recipe-author\">\n                By {recipeOwnerProfile?.full_name || recipeOwnerProfile?.username || 'Chef Anonymous'}\n              </p>\n            </div>\n\n            <div className=\"recipe-actions\">\n              {user && (\n                <button \n                  className={`action-btn save-btn ${isSaved ? 'saved' : ''}`}\n                  onClick={handleSaveRecipe}\n                  disabled={saveLoading}\n                >\n                  <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill={isSaved ? \"currentColor\" : \"none\"} stroke=\"currentColor\" strokeWidth=\"2\">\n                    <path d=\"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"/>\n                  </svg>\n                  {saveLoading ? 'Saving...' : (isSaved ? 'Saved' : 'Save')}\n                </button>\n              )}\n\n              <button className=\"action-btn share-btn\">\n                <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"currentColor\">\n                  <path d=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.50-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92S21 19.61 21 18s-1.31-2.92-2.92-2.92z\"/>\n                </svg>\n                Share\n              </button>\n            </div>\n          </div>\n\n          {/* Recipe Content */}\n          <div className=\"recipe-content\">\n            <div className=\"recipe-sections\">\n              <div className=\"ingredients-section\">\n                <h2 className=\"section-title\">Ingredients</h2>\n                <ul className=\"ingredients-list\">\n                  {recipe.ingredients && recipe.ingredients.length > 0 ? (\n                    recipe.ingredients.map((ingredient, index) => (\n                      <li key={index} className=\"ingredient-item\">\n                        <span className=\"ingredient-bullet\">•</span>\n                        <span className=\"ingredient-text\">{ingredient}</span>\n                      </li>\n                    ))\n                  ) : (\n                    <li className=\"empty-message\">No ingredients listed</li>\n                  )}\n                </ul>\n              </div>\n\n              <div className=\"instructions-section\">\n                <h2 className=\"section-title\">Instructions</h2>\n                <ol className=\"instructions-list\">\n                  {recipe.steps && recipe.steps.length > 0 ? (\n                    recipe.steps.map((step, index) => (\n                      <li key={index} className=\"instruction-item\">\n                        <span className=\"instruction-number\">{index + 1}.</span>\n                        <span className=\"instruction-text\">{step}</span>\n                      </li>\n                    ))\n                  ) : (\n                    <li className=\"empty-message\">No instructions provided</li>\n                  )}\n                </ol>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RecipeDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}