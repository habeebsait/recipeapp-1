{"ast":null,"code":"var _jsxFileName = \"/Users/habeebsait/Apps/food_app/web/src/pages/UserProfile.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport Navigation from '../components/Navigation';\nimport { getUsernameForUrl, generateRecipeUrl } from '../utils/urlUtils';\nimport './UserProfile.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction UserProfile() {\n  _s();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [profileUser, setProfileUser] = useState(null);\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [saveLoading, setSaveLoading] = useState(null);\n  const [savedRecipes, setSavedRecipes] = useState(new Set());\n  const {\n    username\n  } = useParams();\n  const navigate = useNavigate();\n\n  // Helper: Generate subtitle for recipes\n  const getRecipeSubtitle = recipe => {\n    const title = ((recipe === null || recipe === void 0 ? void 0 : recipe.title) || '').toLowerCase();\n    if (title.includes('pasta')) return 'A rich and flavorful pasta dish.';\n    if (title.includes('salad')) return 'A refreshing and healthy salad.';\n    if (title.includes('cake') || title.includes('chocolate')) return 'A decadent chocolate dessert.';\n    if (title.includes('chili') || title.includes('vegan')) return 'Hearty and packed with flavor.';\n    if (recipe !== null && recipe !== void 0 && recipe.category) return `A delicious ${recipe.category.toLowerCase()} recipe.`;\n    return 'A delicious recipe to try.';\n  };\n  useEffect(() => {\n    async function loadUserProfile() {\n      try {\n        // Get current authenticated user\n        const {\n          data: {\n            user: authUser\n          }\n        } = await supabase.auth.getUser();\n        setCurrentUser(authUser);\n\n        // Load saved recipes for current user if authenticated\n        if (authUser) {\n          const {\n            data: savedData\n          } = await supabase.from('saved_recipes').select('user_recipe_id').eq('user_id', authUser.id);\n          if (savedData) {\n            setSavedRecipes(new Set(savedData.map(item => item.user_recipe_id)));\n          }\n        }\n\n        // Find the profile user by username\n        const {\n          data: profiles,\n          error: profileError\n        } = await supabase.from('profiles').select('id, username, full_name, avatar_url, is_public_profile').eq('username', username).single();\n        if (profileError) {\n          console.error('Profile query error:', profileError);\n          console.error('Looking for username:', username);\n          throw new Error('User not found');\n        }\n        console.log('Found profile:', profiles);\n        console.log('is_public_profile value:', profiles.is_public_profile, 'type:', typeof profiles.is_public_profile);\n\n        // Handle both boolean and string values for is_public_profile\n        const isPublic = profiles.is_public_profile === true || profiles.is_public_profile === 'true';\n        if (!isPublic) {\n          throw new Error('This profile is private');\n        }\n        setProfileUser(profiles);\n\n        // Load the user's public recipes\n        const {\n          data: recipeData,\n          error: recipeError\n        } = await supabase.from('user_recipes').select(`\n            id,\n            title,\n            category,\n            ingredients,\n            steps,\n            image_url,\n            created_at,\n            updated_at\n          `).eq('user_id', profiles.id).order('created_at', {\n          ascending: false\n        });\n        if (recipeError) {\n          throw recipeError;\n        }\n        setRecipes(recipeData || []);\n      } catch (err) {\n        console.error('Error loading user profile:', err);\n        setError(err.message || 'Failed to load user profile');\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadUserProfile();\n  }, [username]);\n  const handleSaveRecipe = async recipe => {\n    if (!currentUser) {\n      alert('Please sign in to save recipes');\n      return;\n    }\n    const isCurrentlySaved = savedRecipes.has(recipe.id);\n    try {\n      setSaveLoading(recipe.id);\n      if (isCurrentlySaved) {\n        // Remove from saved recipes\n        const {\n          error\n        } = await supabase.from('saved_recipes').delete().eq('user_id', currentUser.id).eq('user_recipe_id', recipe.id);\n        if (error) throw error;\n        setSavedRecipes(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(recipe.id);\n          return newSet;\n        });\n      } else {\n        // Add to saved recipes\n        // First try without recipe_id (in case it's nullable)\n        let insertData = {\n          user_id: currentUser.id,\n          user_recipe_id: recipe.id,\n          category: recipe.category\n        };\n        let {\n          error\n        } = await supabase.from('saved_recipes').insert([insertData]);\n\n        // If that fails due to NOT NULL constraint, try with a placeholder\n        if (error && error.message.includes('recipe_id')) {\n          insertData.recipe_id = '00000000-0000-0000-0000-000000000000';\n          const {\n            error: retryError\n          } = await supabase.from('saved_recipes').insert([insertData]);\n          if (retryError) {\n            console.error('Save recipe error:', retryError);\n            throw retryError;\n          }\n        } else if (error) {\n          console.error('Save recipe error:', error);\n          throw error;\n        }\n        setSavedRecipes(prev => new Set([...prev, recipe.id]));\n      }\n    } catch (err) {\n      console.error('Error saving recipe:', err);\n      alert(`Failed to ${isCurrentlySaved ? 'remove' : 'save'} recipe: ${err.message}`);\n    } finally {\n      setSaveLoading(null);\n    }\n  };\n  const handleViewRecipe = recipe => {\n    const recipeOwnerUsername = getUsernameForUrl({\n      id: profileUser.id\n    }, profileUser);\n    navigate(generateRecipeUrl(recipeOwnerUsername, recipe));\n  };\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading profile...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  if (error || !profileUser) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user-profile-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Profile Not Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: error || 'The profile you\\'re looking for doesn\\'t exist or is private.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: () => navigate('/'),\n              children: \"Back to Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  const displayName = profileUser.full_name || profileUser.username;\n  const avatarInitials = displayName ? displayName.charAt(0).toUpperCase() : 'U';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-profile-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-profile-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-avatar-large\",\n            children: profileUser.avatar_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n              src: profileUser.avatar_url,\n              alt: displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              children: avatarInitials\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"profile-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"profile-display-name\",\n              children: displayName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), profileUser.full_name && profileUser.username && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"profile-username\",\n              children: [\"@\", profileUser.username]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"profile-stats\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"stat\",\n                children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                  children: recipes.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this), \" \", recipes.length === 1 ? 'Recipe' : 'Recipes']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-recipes-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"section-title\",\n            children: \"Recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 13\n          }, this), recipes.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"empty-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"empty-icon\",\n              children: \"\\uD83D\\uDCDD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"No public recipes yet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [displayName, \" hasn't shared any recipes yet.\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-recipes-grid\",\n            children: recipes.map(recipe => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"user-recipe-card\",\n              onClick: () => handleViewRecipe(recipe),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"recipe-image-container\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"user-recipe-image-wrap\",\n                  children: recipe.image_url ? /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: recipe.image_url,\n                    alt: recipe.title,\n                    loading: \"lazy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 27\n                  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"placeholder-image\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: \"\\uD83C\\uDF73\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 274,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 23\n                }, this), currentUser && currentUser.id !== profileUser.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: `save-overlay-btn ${savedRecipes.has(recipe.id) ? 'saved' : ''}`,\n                  onClick: e => {\n                    e.stopPropagation();\n                    handleSaveRecipe(recipe);\n                  },\n                  disabled: saveLoading === recipe.id,\n                  title: savedRecipes.has(recipe.id) ? 'Remove from saved' : 'Save recipe',\n                  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n                    width: \"20\",\n                    height: \"20\",\n                    viewBox: \"0 0 24 24\",\n                    fill: savedRecipes.has(recipe.id) ? \"currentColor\" : \"none\",\n                    stroke: \"currentColor\",\n                    strokeWidth: \"2\",\n                    children: /*#__PURE__*/_jsxDEV(\"path\", {\n                      d: \"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 292,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"user-recipe-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  className: \"user-recipe-card-title\",\n                  children: recipe.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"user-recipe-card-subtitle\",\n                  children: getRecipeSubtitle(recipe)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"recipe-meta\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"recipe-category\",\n                    children: recipe.category\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"recipe-date\",\n                    children: new Date(recipe.created_at).toLocaleDateString()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 303,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 21\n              }, this)]\n            }, recipe.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(UserProfile, \"TfZApNXonyh0fTh+hj4bP2YumOQ=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","supabase","Navigation","getUsernameForUrl","generateRecipeUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","UserProfile","_s","currentUser","setCurrentUser","profileUser","setProfileUser","recipes","setRecipes","loading","setLoading","error","setError","saveLoading","setSaveLoading","savedRecipes","setSavedRecipes","Set","username","navigate","getRecipeSubtitle","recipe","title","toLowerCase","includes","category","loadUserProfile","data","user","authUser","auth","getUser","savedData","from","select","eq","id","map","item","user_recipe_id","profiles","profileError","single","console","Error","log","is_public_profile","isPublic","recipeData","recipeError","order","ascending","err","message","handleSaveRecipe","alert","isCurrentlySaved","has","delete","prev","newSet","insertData","user_id","insert","recipe_id","retryError","handleViewRecipe","recipeOwnerUsername","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","displayName","full_name","avatarInitials","charAt","toUpperCase","avatar_url","src","alt","length","image_url","e","stopPropagation","disabled","width","height","viewBox","fill","stroke","strokeWidth","d","Date","created_at","toLocaleDateString","_c","$RefreshReg$"],"sources":["/Users/habeebsait/Apps/food_app/web/src/pages/UserProfile.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport Navigation from '../components/Navigation';\nimport { getUsernameForUrl, generateRecipeUrl } from '../utils/urlUtils';\nimport './UserProfile.css';\n\nfunction UserProfile() {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [profileUser, setProfileUser] = useState(null);\n  const [recipes, setRecipes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [saveLoading, setSaveLoading] = useState(null);\n  const [savedRecipes, setSavedRecipes] = useState(new Set());\n  \n  const { username } = useParams();\n  const navigate = useNavigate();\n\n  // Helper: Generate subtitle for recipes\n  const getRecipeSubtitle = (recipe) => {\n    const title = (recipe?.title || '').toLowerCase();\n    if (title.includes('pasta')) return 'A rich and flavorful pasta dish.';\n    if (title.includes('salad')) return 'A refreshing and healthy salad.';\n    if (title.includes('cake') || title.includes('chocolate')) return 'A decadent chocolate dessert.';\n    if (title.includes('chili') || title.includes('vegan')) return 'Hearty and packed with flavor.';\n    if (recipe?.category) return `A delicious ${recipe.category.toLowerCase()} recipe.`;\n    return 'A delicious recipe to try.';\n  };\n\n  useEffect(() => {\n    async function loadUserProfile() {\n      try {\n        // Get current authenticated user\n        const { data: { user: authUser } } = await supabase.auth.getUser();\n        setCurrentUser(authUser);\n\n        // Load saved recipes for current user if authenticated\n        if (authUser) {\n          const { data: savedData } = await supabase\n            .from('saved_recipes')\n            .select('user_recipe_id')\n            .eq('user_id', authUser.id);\n          \n          if (savedData) {\n            setSavedRecipes(new Set(savedData.map(item => item.user_recipe_id)));\n          }\n        }\n\n        // Find the profile user by username\n        const { data: profiles, error: profileError } = await supabase\n          .from('profiles')\n          .select('id, username, full_name, avatar_url, is_public_profile')\n          .eq('username', username)\n          .single();\n\n        if (profileError) {\n          console.error('Profile query error:', profileError);\n          console.error('Looking for username:', username);\n          throw new Error('User not found');\n        }\n\n        console.log('Found profile:', profiles);\n        console.log('is_public_profile value:', profiles.is_public_profile, 'type:', typeof profiles.is_public_profile);\n\n        // Handle both boolean and string values for is_public_profile\n        const isPublic = profiles.is_public_profile === true || profiles.is_public_profile === 'true';\n        \n        if (!isPublic) {\n          throw new Error('This profile is private');\n        }\n\n        setProfileUser(profiles);\n\n        // Load the user's public recipes\n        const { data: recipeData, error: recipeError } = await supabase\n          .from('user_recipes')\n          .select(`\n            id,\n            title,\n            category,\n            ingredients,\n            steps,\n            image_url,\n            created_at,\n            updated_at\n          `)\n          .eq('user_id', profiles.id)\n          .order('created_at', { ascending: false });\n\n        if (recipeError) {\n          throw recipeError;\n        }\n\n        setRecipes(recipeData || []);\n        \n      } catch (err) {\n        console.error('Error loading user profile:', err);\n        setError(err.message || 'Failed to load user profile');\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    loadUserProfile();\n  }, [username]);\n\n  const handleSaveRecipe = async (recipe) => {\n    if (!currentUser) {\n      alert('Please sign in to save recipes');\n      return;\n    }\n\n    const isCurrentlySaved = savedRecipes.has(recipe.id);\n\n    try {\n      setSaveLoading(recipe.id);\n\n      if (isCurrentlySaved) {\n        // Remove from saved recipes\n        const { error } = await supabase\n          .from('saved_recipes')\n          .delete()\n          .eq('user_id', currentUser.id)\n          .eq('user_recipe_id', recipe.id);\n\n        if (error) throw error;\n\n        setSavedRecipes(prev => {\n          const newSet = new Set(prev);\n          newSet.delete(recipe.id);\n          return newSet;\n        });\n      } else {\n        // Add to saved recipes\n        // First try without recipe_id (in case it's nullable)\n        let insertData = {\n          user_id: currentUser.id,\n          user_recipe_id: recipe.id,\n          category: recipe.category\n        };\n\n        let { error } = await supabase\n          .from('saved_recipes')\n          .insert([insertData]);\n\n        // If that fails due to NOT NULL constraint, try with a placeholder\n        if (error && error.message.includes('recipe_id')) {\n          insertData.recipe_id = '00000000-0000-0000-0000-000000000000';\n          \n          const { error: retryError } = await supabase\n            .from('saved_recipes')\n            .insert([insertData]);\n            \n          if (retryError) {\n            console.error('Save recipe error:', retryError);\n            throw retryError;\n          }\n        } else if (error) {\n          console.error('Save recipe error:', error);\n          throw error;\n        }\n\n        setSavedRecipes(prev => new Set([...prev, recipe.id]));\n      }\n    } catch (err) {\n      console.error('Error saving recipe:', err);\n      alert(`Failed to ${isCurrentlySaved ? 'remove' : 'save'} recipe: ${err.message}`);\n    } finally {\n      setSaveLoading(null);\n    }\n  };\n\n  const handleViewRecipe = (recipe) => {\n    const recipeOwnerUsername = getUsernameForUrl({ id: profileUser.id }, profileUser);\n    navigate(generateRecipeUrl(recipeOwnerUsername, recipe));\n  };\n\n  if (loading) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"user-profile-page\">\n          <div className=\"user-profile-container\">\n            <div className=\"loading-state\">\n              <div className=\"spinner\"></div>\n              <p>Loading profile...</p>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  if (error || !profileUser) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"user-profile-page\">\n          <div className=\"user-profile-container\">\n            <div className=\"error-state\">\n              <h2>Profile Not Found</h2>\n              <p>{error || 'The profile you\\'re looking for doesn\\'t exist or is private.'}</p>\n              <button \n                className=\"btn btn-primary\"\n                onClick={() => navigate('/')}\n              >\n                Back to Home\n              </button>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  const displayName = profileUser.full_name || profileUser.username;\n  const avatarInitials = displayName ? displayName.charAt(0).toUpperCase() : 'U';\n\n  return (\n    <>\n      <Navigation />\n      <div className=\"user-profile-page\">\n        <div className=\"user-profile-container\">\n          {/* Profile Header */}\n          <div className=\"profile-header\">\n            <div className=\"profile-avatar-large\">\n              {profileUser.avatar_url ? (\n                <img src={profileUser.avatar_url} alt={displayName} />\n              ) : (\n                <span>{avatarInitials}</span>\n              )}\n            </div>\n            <div className=\"profile-info\">\n              <h1 className=\"profile-display-name\">{displayName}</h1>\n              {profileUser.full_name && profileUser.username && (\n                <p className=\"profile-username\">@{profileUser.username}</p>\n              )}\n              <div className=\"profile-stats\">\n                <span className=\"stat\">\n                  <strong>{recipes.length}</strong> {recipes.length === 1 ? 'Recipe' : 'Recipes'}\n                </span>\n              </div>\n            </div>\n          </div>\n\n          {/* Recipes Section */}\n          <div className=\"profile-recipes-section\">\n            <h2 className=\"section-title\">Recipes</h2>\n            \n            {recipes.length === 0 ? (\n              <div className=\"empty-state\">\n                <div className=\"empty-icon\">📝</div>\n                <h3>No public recipes yet</h3>\n                <p>{displayName} hasn't shared any recipes yet.</p>\n              </div>\n            ) : (\n              <div className=\"user-recipes-grid\">\n                {recipes.map((recipe) => (\n                  <div \n                    key={recipe.id} \n                    className=\"user-recipe-card\"\n                    onClick={() => handleViewRecipe(recipe)}\n                  >\n                    <div className=\"recipe-image-container\">\n                      <div className=\"user-recipe-image-wrap\">\n                        {recipe.image_url ? (\n                          <img \n                            src={recipe.image_url} \n                            alt={recipe.title}\n                            loading=\"lazy\"\n                          />\n                        ) : (\n                          <div className=\"placeholder-image\">\n                            <span>🍳</span>\n                          </div>\n                        )}\n                      </div>\n                      \n                      {/* Save button overlay */}\n                      {currentUser && currentUser.id !== profileUser.id && (\n                        <button\n                          className={`save-overlay-btn ${savedRecipes.has(recipe.id) ? 'saved' : ''}`}\n                          onClick={(e) => {\n                            e.stopPropagation();\n                            handleSaveRecipe(recipe);\n                          }}\n                          disabled={saveLoading === recipe.id}\n                          title={savedRecipes.has(recipe.id) ? 'Remove from saved' : 'Save recipe'}\n                        >\n                          <svg width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill={savedRecipes.has(recipe.id) ? \"currentColor\" : \"none\"} stroke=\"currentColor\" strokeWidth=\"2\">\n                            <path d=\"M19 21l-7-5-7 5V5a2 2 0 0 1 2-2h10a2 2 0 0 1 2 2z\"/>\n                          </svg>\n                        </button>\n                      )}\n                    </div>\n                    \n                    <div className=\"user-recipe-info\">\n                      <h3 className=\"user-recipe-card-title\">{recipe.title}</h3>\n                      <p className=\"user-recipe-card-subtitle\">{getRecipeSubtitle(recipe)}</p>\n                      <div className=\"recipe-meta\">\n                        <span className=\"recipe-category\">{recipe.category}</span>\n                        <span className=\"recipe-date\">\n                          {new Date(recipe.created_at).toLocaleDateString()}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default UserProfile;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}