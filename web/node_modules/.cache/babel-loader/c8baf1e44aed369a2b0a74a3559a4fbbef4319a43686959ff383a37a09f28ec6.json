{"ast":null,"code":"var _jsxFileName = \"/Users/habeebsait/Apps/food_app/recipe-app-web/src/pages/RecipeDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport Navigation from '../components/Navigation';\nimport { parseRecipeSlug, generateMyRecipesUrl, getUsernameForUrl } from '../utils/urlUtils';\nimport './RecipeDetail.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction RecipeDetail() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [recipe, setRecipe] = useState(null);\n  const [recipeOwnerProfile, setRecipeOwnerProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isSaved, setIsSaved] = useState(false);\n  const [saveLoading, setSaveLoading] = useState(false);\n  const {\n    username,\n    recipeSlug\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function loadRecipeAndUser() {\n      try {\n        // Parse recipe ID from slug\n        const recipeId = parseRecipeSlug(recipeSlug);\n        if (!recipeId) {\n          setError('Invalid recipe URL');\n          setLoading(false);\n          return;\n        }\n\n        // Check authentication\n        const {\n          data: {\n            user: currentUser\n          }\n        } = await supabase.auth.getUser();\n        setUser(currentUser);\n\n        // Load current user's profile if authenticated\n        if (currentUser) {\n          const {\n            data: userProfile,\n            error: profileError\n          } = await supabase.from('profiles').select('username, full_name').eq('id', currentUser.id).single();\n          if (!profileError) {\n            setProfile(userProfile);\n          }\n        }\n\n        // Load the recipe\n        const {\n          data: recipeData,\n          error: recipeError\n        } = await supabase.from('user_recipes').select(`\n            id,\n            title,\n            category,\n            ingredients,\n            steps,\n            image_url,\n            created_at,\n            updated_at,\n            user_id,\n            profiles!user_recipes_user_id_fkey (\n              username,\n              full_name\n            )\n          `).eq('id', recipeId).single();\n        if (recipeError) {\n          if (recipeError.code === 'PGRST116') {\n            setError('Recipe not found');\n          } else {\n            throw recipeError;\n          }\n          setLoading(false);\n          return;\n        }\n        setRecipe(recipeData);\n        setRecipeOwnerProfile(recipeData.profiles);\n\n        // Verify that the username in the URL matches the recipe owner\n        const recipeOwnerUsername = getUsernameForUrl({\n          id: recipeData.user_id\n        }, recipeData.profiles);\n        if (username !== recipeOwnerUsername) {\n          // Redirect to the correct URL\n          const correctSlug = `${recipeData.title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-+|-+$/g, '')}-${recipeData.id}`;\n          navigate(`/${recipeOwnerUsername}/my-recipes/${correctSlug}`, {\n            replace: true\n          });\n          return;\n        }\n\n        // Check if recipe is saved by current user (if authenticated)\n        if (currentUser) {\n          const {\n            data: savedData,\n            error: savedError\n          } = await supabase.from('saved_recipes').select('id').eq('user_id', currentUser.id).eq('recipe_id', recipeId).single();\n          if (!savedError) {\n            setIsSaved(true);\n          }\n        }\n      } catch (err) {\n        console.error('Error loading recipe:', err);\n        setError(`Failed to load recipe: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    }\n    loadRecipeAndUser();\n  }, [username, recipeSlug, navigate]);\n  const handleSaveRecipe = async () => {\n    if (!user) {\n      alert('Please sign in to save recipes');\n      return;\n    }\n    if (!recipe) return;\n    try {\n      setSaveLoading(true);\n      if (isSaved) {\n        // Remove from saved recipes\n        const {\n          error\n        } = await supabase.from('saved_recipes').delete().eq('user_id', user.id).eq('recipe_id', recipe.id);\n        if (error) throw error;\n        setIsSaved(false);\n      } else {\n        // Add to saved recipes\n        const {\n          error\n        } = await supabase.from('saved_recipes').insert([{\n          user_id: user.id,\n          recipe_id: recipe.id\n        }]);\n        if (error) throw error;\n        setIsSaved(true);\n      }\n    } catch (err) {\n      console.error('Error saving recipe:', err);\n      alert(`Failed to ${isSaved ? 'remove' : 'save'} recipe: ${err.message}`);\n    } finally {\n      setSaveLoading(false);\n    }\n  };\n  const isOwner = user && recipe && user.id === recipe.user_id;\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-detail-page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-detail-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-spinner\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading recipe...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  if (error || !recipe) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-detail-page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-detail-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"error-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Recipe Not Found\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: error || 'The recipe you\\'re looking for doesn\\'t exist.'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"recipe-btn recipe-btn-primary\",\n              onClick: () => navigate('/'),\n              children: \"Back to Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipe-detail-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recipe-detail-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"breadcrumb\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"breadcrumb-link\",\n              onClick: () => navigate('/'),\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"breadcrumb-separator\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"breadcrumb-link\",\n              onClick: () => {\n                const ownerUsername = getUsernameForUrl({\n                  id: recipe.user_id\n                }, recipeOwnerProfile);\n                navigate(generateMyRecipesUrl(ownerUsername));\n              },\n              children: [(recipeOwnerProfile === null || recipeOwnerProfile === void 0 ? void 0 : recipeOwnerProfile.full_name) || (recipeOwnerProfile === null || recipeOwnerProfile === void 0 ? void 0 : recipeOwnerProfile.username) || 'User', \"'s Recipes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"breadcrumb-separator\",\n              children: \"\\u2192\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"breadcrumb-current\",\n              children: recipe.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-title-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"recipe-title\",\n              children: recipe.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"recipe-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recipe-category\",\n                children: recipe.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recipe-date\",\n                children: [\"Created \", new Date(recipe.created_at).toLocaleDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"recipe-author\",\n                children: [\"by \", (recipeOwnerProfile === null || recipeOwnerProfile === void 0 ? void 0 : recipeOwnerProfile.full_name) || (recipeOwnerProfile === null || recipeOwnerProfile === void 0 ? void 0 : recipeOwnerProfile.username) || 'Anonymous']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-actions\",\n            children: [!isOwner && user && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `recipe-btn ${isSaved ? 'recipe-btn-secondary' : 'recipe-btn-primary'}`,\n              onClick: handleSaveRecipe,\n              disabled: saveLoading,\n              children: saveLoading ? 'Loading...' : isSaved ? '❤️ Saved' : '🤍 Save Recipe'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this), isOwner && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"recipe-btn recipe-btn-secondary\",\n              onClick: () => {\n                const userUsername = getUsernameForUrl(user, profile);\n                navigate(generateMyRecipesUrl(userUsername));\n              },\n              children: \"Edit My Recipes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 256,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recipe-content\",\n          children: [recipe.image_url && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-image-section\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: recipe.image_url,\n              alt: recipe.title,\n              className: \"recipe-image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"recipe-sections\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ingredients-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Ingredients\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ingredients-list\",\n                children: recipe.ingredients && recipe.ingredients.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n                  children: recipe.ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"ingredient-item\",\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: \"ingredient-text\",\n                      children: ingredient\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 288,\n                      columnNumber: 27\n                    }, this)\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 285,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"empty-message\",\n                  children: \"No ingredients listed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"steps-section\",\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Instructions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"steps-list\",\n                children: recipe.steps && recipe.steps.length > 0 ? /*#__PURE__*/_jsxDEV(\"ol\", {\n                  children: recipe.steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    className: \"step-item\",\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"step-number\",\n                      children: index + 1\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 305,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"step-content\",\n                      children: step\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 27\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 304,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"empty-message\",\n                  children: \"No instructions provided\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(RecipeDetail, \"2d8LytulneONCoCD1WdYWSXetvA=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RecipeDetail;\nexport default RecipeDetail;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetail\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","supabase","Navigation","parseRecipeSlug","generateMyRecipesUrl","getUsernameForUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","RecipeDetail","_s","user","setUser","profile","setProfile","recipe","setRecipe","recipeOwnerProfile","setRecipeOwnerProfile","loading","setLoading","error","setError","isSaved","setIsSaved","saveLoading","setSaveLoading","username","recipeSlug","navigate","loadRecipeAndUser","recipeId","data","currentUser","auth","getUser","userProfile","profileError","from","select","eq","id","single","recipeData","recipeError","code","profiles","recipeOwnerUsername","user_id","correctSlug","title","toLowerCase","replace","savedData","savedError","err","console","message","handleSaveRecipe","alert","delete","insert","recipe_id","isOwner","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","ownerUsername","full_name","category","Date","created_at","toLocaleDateString","disabled","userUsername","image_url","src","alt","ingredients","length","map","ingredient","index","steps","step","_c","$RefreshReg$"],"sources":["/Users/habeebsait/Apps/food_app/recipe-app-web/src/pages/RecipeDetail.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams, useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport Navigation from '../components/Navigation';\nimport { parseRecipeSlug, generateMyRecipesUrl, getUsernameForUrl } from '../utils/urlUtils';\nimport './RecipeDetail.css';\n\nfunction RecipeDetail() {\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [recipe, setRecipe] = useState(null);\n  const [recipeOwnerProfile, setRecipeOwnerProfile] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [isSaved, setIsSaved] = useState(false);\n  const [saveLoading, setSaveLoading] = useState(false);\n  \n  const { username, recipeSlug } = useParams();\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    async function loadRecipeAndUser() {\n      try {\n        // Parse recipe ID from slug\n        const recipeId = parseRecipeSlug(recipeSlug);\n        if (!recipeId) {\n          setError('Invalid recipe URL');\n          setLoading(false);\n          return;\n        }\n\n        // Check authentication\n        const { data: { user: currentUser } } = await supabase.auth.getUser();\n        setUser(currentUser);\n\n        // Load current user's profile if authenticated\n        if (currentUser) {\n          const { data: userProfile, error: profileError } = await supabase\n            .from('profiles')\n            .select('username, full_name')\n            .eq('id', currentUser.id)\n            .single();\n\n          if (!profileError) {\n            setProfile(userProfile);\n          }\n        }\n\n        // Load the recipe\n        const { data: recipeData, error: recipeError } = await supabase\n          .from('user_recipes')\n          .select(`\n            id,\n            title,\n            category,\n            ingredients,\n            steps,\n            image_url,\n            created_at,\n            updated_at,\n            user_id,\n            profiles!user_recipes_user_id_fkey (\n              username,\n              full_name\n            )\n          `)\n          .eq('id', recipeId)\n          .single();\n\n        if (recipeError) {\n          if (recipeError.code === 'PGRST116') {\n            setError('Recipe not found');\n          } else {\n            throw recipeError;\n          }\n          setLoading(false);\n          return;\n        }\n\n        setRecipe(recipeData);\n        setRecipeOwnerProfile(recipeData.profiles);\n\n        // Verify that the username in the URL matches the recipe owner\n        const recipeOwnerUsername = getUsernameForUrl(\n          { id: recipeData.user_id }, \n          recipeData.profiles\n        );\n        \n        if (username !== recipeOwnerUsername) {\n          // Redirect to the correct URL\n          const correctSlug = `${recipeData.title.toLowerCase().replace(/[^a-z0-9]+/g, '-').replace(/^-+|-+$/g, '')}-${recipeData.id}`;\n          navigate(`/${recipeOwnerUsername}/my-recipes/${correctSlug}`, { replace: true });\n          return;\n        }\n\n        // Check if recipe is saved by current user (if authenticated)\n        if (currentUser) {\n          const { data: savedData, error: savedError } = await supabase\n            .from('saved_recipes')\n            .select('id')\n            .eq('user_id', currentUser.id)\n            .eq('recipe_id', recipeId)\n            .single();\n\n          if (!savedError) {\n            setIsSaved(true);\n          }\n        }\n\n      } catch (err) {\n        console.error('Error loading recipe:', err);\n        setError(`Failed to load recipe: ${err.message}`);\n      } finally {\n        setLoading(false);\n      }\n    }\n\n    loadRecipeAndUser();\n  }, [username, recipeSlug, navigate]);\n\n  const handleSaveRecipe = async () => {\n    if (!user) {\n      alert('Please sign in to save recipes');\n      return;\n    }\n\n    if (!recipe) return;\n\n    try {\n      setSaveLoading(true);\n\n      if (isSaved) {\n        // Remove from saved recipes\n        const { error } = await supabase\n          .from('saved_recipes')\n          .delete()\n          .eq('user_id', user.id)\n          .eq('recipe_id', recipe.id);\n\n        if (error) throw error;\n        setIsSaved(false);\n      } else {\n        // Add to saved recipes\n        const { error } = await supabase\n          .from('saved_recipes')\n          .insert([{\n            user_id: user.id,\n            recipe_id: recipe.id\n          }]);\n\n        if (error) throw error;\n        setIsSaved(true);\n      }\n    } catch (err) {\n      console.error('Error saving recipe:', err);\n      alert(`Failed to ${isSaved ? 'remove' : 'save'} recipe: ${err.message}`);\n    } finally {\n      setSaveLoading(false);\n    }\n  };\n\n  const isOwner = user && recipe && user.id === recipe.user_id;\n\n  if (loading) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"recipe-detail-page\">\n          <div className=\"recipe-detail-container\">\n            <div className=\"loading-spinner\">\n              <div className=\"spinner\"></div>\n              <p>Loading recipe...</p>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  if (error || !recipe) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"recipe-detail-page\">\n          <div className=\"recipe-detail-container\">\n            <div className=\"error-state\">\n              <h2>Recipe Not Found</h2>\n              <p>{error || 'The recipe you\\'re looking for doesn\\'t exist.'}</p>\n              <button \n                className=\"recipe-btn recipe-btn-primary\"\n                onClick={() => navigate('/')}\n              >\n                Back to Home\n              </button>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Navigation />\n      <div className=\"recipe-detail-page\">\n        <div className=\"recipe-detail-container\">\n          <div className=\"recipe-header\">\n            <div className=\"breadcrumb\">\n              <button \n                className=\"breadcrumb-link\"\n                onClick={() => navigate('/')}\n              >\n                Home\n              </button>\n              <span className=\"breadcrumb-separator\">→</span>\n              <button \n                className=\"breadcrumb-link\"\n                onClick={() => {\n                  const ownerUsername = getUsernameForUrl(\n                    { id: recipe.user_id }, \n                    recipeOwnerProfile\n                  );\n                  navigate(generateMyRecipesUrl(ownerUsername));\n                }}\n              >\n                {recipeOwnerProfile?.full_name || recipeOwnerProfile?.username || 'User'}'s Recipes\n              </button>\n              <span className=\"breadcrumb-separator\">→</span>\n              <span className=\"breadcrumb-current\">{recipe.title}</span>\n            </div>\n\n            <div className=\"recipe-title-section\">\n              <h1 className=\"recipe-title\">{recipe.title}</h1>\n              <div className=\"recipe-meta\">\n                <span className=\"recipe-category\">{recipe.category}</span>\n                <span className=\"recipe-date\">\n                  Created {new Date(recipe.created_at).toLocaleDateString()}\n                </span>\n                <span className=\"recipe-author\">\n                  by {recipeOwnerProfile?.full_name || recipeOwnerProfile?.username || 'Anonymous'}\n                </span>\n              </div>\n            </div>\n\n            <div className=\"recipe-actions\">\n              {!isOwner && user && (\n                <button \n                  className={`recipe-btn ${isSaved ? 'recipe-btn-secondary' : 'recipe-btn-primary'}`}\n                  onClick={handleSaveRecipe}\n                  disabled={saveLoading}\n                >\n                  {saveLoading ? 'Loading...' : (isSaved ? '❤️ Saved' : '🤍 Save Recipe')}\n                </button>\n              )}\n              {isOwner && (\n                <button \n                  className=\"recipe-btn recipe-btn-secondary\"\n                  onClick={() => {\n                    const userUsername = getUsernameForUrl(user, profile);\n                    navigate(generateMyRecipesUrl(userUsername));\n                  }}\n                >\n                  Edit My Recipes\n                </button>\n              )}\n            </div>\n          </div>\n\n          <div className=\"recipe-content\">\n            {recipe.image_url && (\n              <div className=\"recipe-image-section\">\n                <img \n                  src={recipe.image_url} \n                  alt={recipe.title}\n                  className=\"recipe-image\"\n                />\n              </div>\n            )}\n\n            <div className=\"recipe-sections\">\n              <div className=\"ingredients-section\">\n                <h2>Ingredients</h2>\n                <div className=\"ingredients-list\">\n                  {recipe.ingredients && recipe.ingredients.length > 0 ? (\n                    <ul>\n                      {recipe.ingredients.map((ingredient, index) => (\n                        <li key={index} className=\"ingredient-item\">\n                          <span className=\"ingredient-text\">{ingredient}</span>\n                        </li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <p className=\"empty-message\">No ingredients listed</p>\n                  )}\n                </div>\n              </div>\n\n              <div className=\"steps-section\">\n                <h2>Instructions</h2>\n                <div className=\"steps-list\">\n                  {recipe.steps && recipe.steps.length > 0 ? (\n                    <ol>\n                      {recipe.steps.map((step, index) => (\n                        <li key={index} className=\"step-item\">\n                          <div className=\"step-number\">{index + 1}</div>\n                          <div className=\"step-content\">{step}</div>\n                        </li>\n                      ))}\n                    </ol>\n                  ) : (\n                    <p className=\"empty-message\">No instructions provided</p>\n                  )}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default RecipeDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}