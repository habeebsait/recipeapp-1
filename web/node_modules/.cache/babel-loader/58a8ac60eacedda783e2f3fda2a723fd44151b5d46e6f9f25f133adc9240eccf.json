{"ast":null,"code":"var _jsxFileName = \"/Users/habeebsait/Apps/food_app/web/src/pages/EditRecipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport Navigation from '../components/Navigation';\nimport { generateMyRecipesUrl, getUsernameForUrl } from '../utils/urlUtils';\nimport './CreateRecipe.css'; // Reusing CreateRecipe styles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction EditRecipe() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('');\n  const [ingredients, setIngredients] = useState(['']);\n  const [steps, setSteps] = useState(['']);\n  const [image, setImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [currentImageUrl, setCurrentImageUrl] = useState(''); // Store existing image URL\n\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate();\n  const {\n    username,\n    recipeId\n  } = useParams();\n\n  // Cleanup preview URL when component unmounts or image changes\n  useEffect(() => {\n    return () => {\n      if (imageUrl && imageUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(imageUrl);\n      }\n    };\n  }, [imageUrl]);\n  useEffect(() => {\n    loadUserCategoriesAndRecipe();\n  }, [navigate, username, recipeId]);\n  const loadUserCategoriesAndRecipe = async () => {\n    try {\n      // Check authentication\n      const {\n        data: {\n          user: currentUser\n        }\n      } = await supabase.auth.getUser();\n      setUser(currentUser);\n      if (!currentUser) {\n        navigate('/');\n        return;\n      }\n\n      // Load user profile\n      const {\n        data: userProfile,\n        error: profileError\n      } = await supabase.from('profiles').select('username, full_name').eq('id', currentUser.id).single();\n      if (profileError && profileError.code !== 'PGRST116') {\n        console.error('Error loading profile:', profileError);\n      } else {\n        setProfile(userProfile);\n      }\n\n      // Validate that the username in URL matches current user\n      const expectedUsername = getUsernameForUrl(currentUser, userProfile);\n      if (username !== expectedUsername) {\n        navigate(`/${expectedUsername}/my-recipes`);\n        return;\n      }\n\n      // Load categories\n      const {\n        data: categoriesData,\n        error: categoriesError\n      } = await supabase.from('categories').select('id, name').order('name', {\n        ascending: true\n      });\n      if (categoriesError) {\n        console.error('Error loading categories:', categoriesError);\n      } else {\n        setCategories(categoriesData || []);\n      }\n\n      // Load existing recipe data\n      const {\n        data: recipeData,\n        error: recipeError\n      } = await supabase.from('user_recipes').select('*').eq('id', recipeId).eq('user_id', currentUser.id) // Ensure user can only edit their own recipes\n      .single();\n      if (recipeError) {\n        if (recipeError.code === 'PGRST116') {\n          setError('Recipe not found or you do not have permission to edit it.');\n        } else {\n          throw recipeError;\n        }\n        return;\n      }\n\n      // Populate form with existing recipe data\n      setTitle(recipeData.title || '');\n      setCategory(recipeData.category || '');\n      setIngredients(recipeData.ingredients || ['']);\n      setSteps(recipeData.steps || ['']);\n      setCurrentImageUrl(recipeData.image_url || '');\n    } catch (err) {\n      console.error('Error loading data:', err);\n      setError(`Failed to load recipe: ${err.message}`);\n    } finally {\n      setPageLoading(false);\n    }\n  };\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    if (file) {\n      // Revoke previous blob URL\n      if (imageUrl && imageUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(imageUrl);\n      }\n      setImage(file);\n      setImageUrl(URL.createObjectURL(file));\n    }\n  };\n  const addIngredient = () => {\n    setIngredients([...ingredients, '']);\n  };\n  const removeIngredient = index => {\n    if (ingredients.length > 1) {\n      setIngredients(ingredients.filter((_, i) => i !== index));\n    }\n  };\n  const updateIngredient = (index, value) => {\n    const newIngredients = [...ingredients];\n    newIngredients[index] = value;\n    setIngredients(newIngredients);\n  };\n  const addStep = () => {\n    setSteps([...steps, '']);\n  };\n  const removeStep = index => {\n    if (steps.length > 1) {\n      setSteps(steps.filter((_, i) => i !== index));\n    }\n  };\n  const updateStep = (index, value) => {\n    const newSteps = [...steps];\n    newSteps[index] = value;\n    setSteps(newSteps);\n  };\n  const uploadImage = async () => {\n    if (!image) return currentImageUrl; // Return existing image URL if no new image\n\n    try {\n      const fileExt = image.name.split('.').pop();\n      const fileName = `${user.id}_${Date.now()}.${fileExt}`;\n      const filePath = `${user.id}/${fileName}`;\n      const {\n        error: uploadError\n      } = await supabase.storage.from('recipe-images').upload(filePath, image);\n      if (uploadError) {\n        throw uploadError;\n      }\n\n      // Get public URL\n      const {\n        data\n      } = supabase.storage.from('recipe-images').getPublicUrl(filePath);\n      return data.publicUrl;\n    } catch (err) {\n      console.error('Error uploading image:', err);\n      throw new Error(`Failed to upload image: ${err.message}`);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!user) return;\n\n    // Basic validation\n    if (!title.trim()) {\n      setError('Recipe title is required');\n      return;\n    }\n    if (!category) {\n      setError('Please select a category');\n      return;\n    }\n    const validIngredients = ingredients.filter(ing => ing.trim());\n    if (validIngredients.length === 0) {\n      setError('At least one ingredient is required');\n      return;\n    }\n    const validSteps = steps.filter(step => step.trim());\n    if (validSteps.length === 0) {\n      setError('At least one step is required');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n\n      // Upload new image if provided, otherwise keep existing\n      let finalImageUrl = currentImageUrl;\n      if (image) {\n        // Delete old image if it exists and we're uploading a new one\n        if (currentImageUrl) {\n          try {\n            console.log('Attempting to delete old image:', currentImageUrl);\n            const url = new URL(currentImageUrl);\n            const pathParts = url.pathname.split('/');\n            console.log('URL pathname:', url.pathname);\n            console.log('Path parts:', pathParts);\n\n            // Look for both 'recipe-images' and 'recipe_images' bucket names\n            let bucketIndex = pathParts.findIndex(part => part === 'recipe-images');\n            if (bucketIndex === -1) {\n              bucketIndex = pathParts.findIndex(part => part === 'recipe_images');\n            }\n            console.log('Bucket index:', bucketIndex);\n            if (bucketIndex !== -1 && bucketIndex < pathParts.length - 1) {\n              const filePath = pathParts.slice(bucketIndex + 1).join('/');\n              console.log('Extracted file path:', filePath);\n              const {\n                data: deleteData,\n                error: storageError\n              } = await supabase.storage.from('recipe-images').remove([filePath]);\n              if (storageError) {\n                console.error('Storage deletion error:', storageError);\n              } else {\n                console.log('Old image deleted successfully:', deleteData);\n              }\n            } else {\n              console.warn('Could not find recipe-images bucket in URL path');\n\n              // Alternative approach\n              const urlParts = currentImageUrl.split('/');\n              const possibleFilename = urlParts[urlParts.length - 1];\n              if (possibleFilename && possibleFilename.includes('.')) {\n                console.log('Trying alternative path extraction:', possibleFilename);\n                const possiblePaths = [possibleFilename, `${user.id}/${possibleFilename}`];\n                for (const path of possiblePaths) {\n                  console.log('Trying to delete path:', path);\n                  const {\n                    error: altError\n                  } = await supabase.storage.from('recipe-images').remove([path]);\n                  if (!altError) {\n                    console.log('Successfully deleted old image using path:', path);\n                    break;\n                  } else {\n                    console.warn('Failed to delete using path:', path, altError);\n                  }\n                }\n              }\n            }\n          } catch (imageError) {\n            console.error('Error deleting old image:', imageError);\n            // Continue with update even if old image deletion fails\n          }\n        }\n        finalImageUrl = await uploadImage();\n      }\n\n      // Update recipe in database\n      const {\n        error: updateError\n      } = await supabase.from('user_recipes').update({\n        title: title.trim(),\n        category: category,\n        ingredients: validIngredients,\n        steps: validSteps,\n        image_url: finalImageUrl,\n        updated_at: new Date().toISOString()\n      }).eq('id', recipeId).eq('user_id', user.id);\n      if (updateError) {\n        throw updateError;\n      }\n      setSuccess('Recipe updated successfully!');\n\n      // Redirect to my recipes after a short delay\n      setTimeout(() => {\n        const userUsername = getUsernameForUrl(user, profile);\n        navigate(generateMyRecipesUrl(userUsername));\n      }, 2000);\n    } catch (err) {\n      console.error('Error updating recipe:', err);\n      setError(`Failed to update recipe: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (pageLoading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-recipe-page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-recipe-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"loading-state\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Loading recipe...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 338,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 335,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-recipe-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-header\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"page-title\",\n            children: \"Edit Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          className: \"recipe-form\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"title\",\n              className: \"form-label\",\n              children: \"Recipe Title *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              id: \"title\",\n              value: title,\n              onChange: e => setTitle(e.target.value),\n              className: \"form-input\",\n              placeholder: \"Enter recipe title\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"category\",\n              className: \"form-label\",\n              children: \"Category *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"category\",\n              value: category,\n              onChange: e => setCategory(e.target.value),\n              className: \"form-select\",\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select a category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 17\n              }, this), categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: cat.name,\n                children: cat.name\n              }, cat.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 394,\n                columnNumber: 19\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              className: \"form-label\",\n              children: \"Recipe Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"image\",\n              accept: \"image/*\",\n              onChange: handleImageChange,\n              className: \"form-input file-input\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), (imageUrl || currentImageUrl) && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"image-preview\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: imageUrl || currentImageUrl,\n                alt: \"Recipe preview\",\n                className: \"preview-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 413,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 412,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Ingredients *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dynamic-list\",\n              children: [ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: ingredient,\n                  onChange: e => updateIngredient(index, e.target.value),\n                  className: \"form-input\",\n                  placeholder: `Ingredient ${index + 1}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 21\n                }, this), ingredients.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => removeIngredient(index),\n                  className: \"remove-btn\",\n                  title: \"Remove ingredient\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 436,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 427,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: addIngredient,\n                className: \"add-btn\",\n                children: \"+ Add Ingredient\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 447,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label\",\n              children: \"Cooking Steps *\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 459,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"dynamic-list\",\n              children: [steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n                  value: step,\n                  onChange: e => updateStep(index, e.target.value),\n                  className: \"form-textarea\",\n                  placeholder: `Step ${index + 1}`,\n                  rows: \"3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 21\n                }, this), steps.length > 1 && /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: () => removeStep(index),\n                  className: \"remove-btn\",\n                  title: \"Remove step\",\n                  children: \"\\xD7\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 19\n              }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                onClick: addStep,\n                className: \"add-btn\",\n                children: \"+ Add Step\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 482,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 458,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => {\n                const userUsername = getUsernameForUrl(user, profile);\n                navigate(generateMyRecipesUrl(userUsername));\n              },\n              className: \"cancel-btn\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 494,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: loading,\n              className: \"submit-btn\",\n              children: loading ? 'Updating Recipe...' : 'Update Recipe'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 504,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 367,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(EditRecipe, \"gliTS5aDbrXNav0Bjg1VTZHJ78c=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = EditRecipe;\nexport default EditRecipe;\nvar _c;\n$RefreshReg$(_c, \"EditRecipe\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useParams","supabase","Navigation","generateMyRecipesUrl","getUsernameForUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","EditRecipe","_s","user","setUser","profile","setProfile","loading","setLoading","pageLoading","setPageLoading","error","setError","success","setSuccess","title","setTitle","category","setCategory","ingredients","setIngredients","steps","setSteps","image","setImage","imageUrl","setImageUrl","currentImageUrl","setCurrentImageUrl","categories","setCategories","navigate","username","recipeId","startsWith","URL","revokeObjectURL","loadUserCategoriesAndRecipe","data","currentUser","auth","getUser","userProfile","profileError","from","select","eq","id","single","code","console","expectedUsername","categoriesData","categoriesError","order","ascending","recipeData","recipeError","image_url","err","message","handleImageChange","e","file","target","files","createObjectURL","addIngredient","removeIngredient","index","length","filter","_","i","updateIngredient","value","newIngredients","addStep","removeStep","updateStep","newSteps","uploadImage","fileExt","name","split","pop","fileName","Date","now","filePath","uploadError","storage","upload","getPublicUrl","publicUrl","Error","handleSubmit","preventDefault","trim","validIngredients","ing","validSteps","step","finalImageUrl","log","url","pathParts","pathname","bucketIndex","findIndex","part","slice","join","deleteData","storageError","remove","warn","urlParts","possibleFilename","includes","possiblePaths","path","altError","imageError","updateError","update","updated_at","toISOString","setTimeout","userUsername","children","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","onChange","placeholder","required","map","cat","accept","src","alt","ingredient","onClick","rows","disabled","_c","$RefreshReg$"],"sources":["/Users/habeebsait/Apps/food_app/web/src/pages/EditRecipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport Navigation from '../components/Navigation';\nimport { generateMyRecipesUrl, getUsernameForUrl } from '../utils/urlUtils';\nimport './CreateRecipe.css'; // Reusing CreateRecipe styles\n\nfunction EditRecipe() {\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [pageLoading, setPageLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  \n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('');\n  const [ingredients, setIngredients] = useState(['']);\n  const [steps, setSteps] = useState(['']);\n  const [image, setImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [currentImageUrl, setCurrentImageUrl] = useState(''); // Store existing image URL\n  \n  const [categories, setCategories] = useState([]);\n  \n  const navigate = useNavigate();\n  const { username, recipeId } = useParams();\n\n  // Cleanup preview URL when component unmounts or image changes\n  useEffect(() => {\n    return () => {\n      if (imageUrl && imageUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(imageUrl);\n      }\n    };\n  }, [imageUrl]);\n\n  useEffect(() => {\n    loadUserCategoriesAndRecipe();\n  }, [navigate, username, recipeId]);\n\n  const loadUserCategoriesAndRecipe = async () => {\n    try {\n      // Check authentication\n      const { data: { user: currentUser } } = await supabase.auth.getUser();\n      setUser(currentUser);\n      \n      if (!currentUser) {\n        navigate('/');\n        return;\n      }\n\n      // Load user profile\n      const { data: userProfile, error: profileError } = await supabase\n        .from('profiles')\n        .select('username, full_name')\n        .eq('id', currentUser.id)\n        .single();\n\n      if (profileError && profileError.code !== 'PGRST116') {\n        console.error('Error loading profile:', profileError);\n      } else {\n        setProfile(userProfile);\n      }\n\n      // Validate that the username in URL matches current user\n      const expectedUsername = getUsernameForUrl(currentUser, userProfile);\n      if (username !== expectedUsername) {\n        navigate(`/${expectedUsername}/my-recipes`);\n        return;\n      }\n\n      // Load categories\n      const { data: categoriesData, error: categoriesError } = await supabase\n        .from('categories')\n        .select('id, name')\n        .order('name', { ascending: true });\n\n      if (categoriesError) {\n        console.error('Error loading categories:', categoriesError);\n      } else {\n        setCategories(categoriesData || []);\n      }\n\n      // Load existing recipe data\n      const { data: recipeData, error: recipeError } = await supabase\n        .from('user_recipes')\n        .select('*')\n        .eq('id', recipeId)\n        .eq('user_id', currentUser.id) // Ensure user can only edit their own recipes\n        .single();\n\n      if (recipeError) {\n        if (recipeError.code === 'PGRST116') {\n          setError('Recipe not found or you do not have permission to edit it.');\n        } else {\n          throw recipeError;\n        }\n        return;\n      }\n\n      // Populate form with existing recipe data\n      setTitle(recipeData.title || '');\n      setCategory(recipeData.category || '');\n      setIngredients(recipeData.ingredients || ['']);\n      setSteps(recipeData.steps || ['']);\n      setCurrentImageUrl(recipeData.image_url || '');\n\n    } catch (err) {\n      console.error('Error loading data:', err);\n      setError(`Failed to load recipe: ${err.message}`);\n    } finally {\n      setPageLoading(false);\n    }\n  };\n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      // Revoke previous blob URL\n      if (imageUrl && imageUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(imageUrl);\n      }\n      \n      setImage(file);\n      setImageUrl(URL.createObjectURL(file));\n    }\n  };\n\n  const addIngredient = () => {\n    setIngredients([...ingredients, '']);\n  };\n\n  const removeIngredient = (index) => {\n    if (ingredients.length > 1) {\n      setIngredients(ingredients.filter((_, i) => i !== index));\n    }\n  };\n\n  const updateIngredient = (index, value) => {\n    const newIngredients = [...ingredients];\n    newIngredients[index] = value;\n    setIngredients(newIngredients);\n  };\n\n  const addStep = () => {\n    setSteps([...steps, '']);\n  };\n\n  const removeStep = (index) => {\n    if (steps.length > 1) {\n      setSteps(steps.filter((_, i) => i !== index));\n    }\n  };\n\n  const updateStep = (index, value) => {\n    const newSteps = [...steps];\n    newSteps[index] = value;\n    setSteps(newSteps);\n  };\n\n  const uploadImage = async () => {\n    if (!image) return currentImageUrl; // Return existing image URL if no new image\n\n    try {\n      const fileExt = image.name.split('.').pop();\n      const fileName = `${user.id}_${Date.now()}.${fileExt}`;\n      const filePath = `${user.id}/${fileName}`;\n\n      const { error: uploadError } = await supabase.storage\n        .from('recipe-images')\n        .upload(filePath, image);\n\n      if (uploadError) {\n        throw uploadError;\n      }\n\n      // Get public URL\n      const { data } = supabase.storage\n        .from('recipe-images')\n        .getPublicUrl(filePath);\n\n      return data.publicUrl;\n    } catch (err) {\n      console.error('Error uploading image:', err);\n      throw new Error(`Failed to upload image: ${err.message}`);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!user) return;\n\n    // Basic validation\n    if (!title.trim()) {\n      setError('Recipe title is required');\n      return;\n    }\n\n    if (!category) {\n      setError('Please select a category');\n      return;\n    }\n\n    const validIngredients = ingredients.filter(ing => ing.trim());\n    if (validIngredients.length === 0) {\n      setError('At least one ingredient is required');\n      return;\n    }\n\n    const validSteps = steps.filter(step => step.trim());\n    if (validSteps.length === 0) {\n      setError('At least one step is required');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      setSuccess('');\n\n      // Upload new image if provided, otherwise keep existing\n      let finalImageUrl = currentImageUrl;\n      if (image) {\n        // Delete old image if it exists and we're uploading a new one\n        if (currentImageUrl) {\n          try {\n            console.log('Attempting to delete old image:', currentImageUrl);\n            \n            const url = new URL(currentImageUrl);\n            const pathParts = url.pathname.split('/');\n            \n            console.log('URL pathname:', url.pathname);\n            console.log('Path parts:', pathParts);\n            \n            // Look for both 'recipe-images' and 'recipe_images' bucket names\n            let bucketIndex = pathParts.findIndex(part => part === 'recipe-images');\n            if (bucketIndex === -1) {\n              bucketIndex = pathParts.findIndex(part => part === 'recipe_images');\n            }\n            console.log('Bucket index:', bucketIndex);\n            \n            if (bucketIndex !== -1 && bucketIndex < pathParts.length - 1) {\n              const filePath = pathParts.slice(bucketIndex + 1).join('/');\n              console.log('Extracted file path:', filePath);\n              \n              const { data: deleteData, error: storageError } = await supabase.storage\n                .from('recipe-images')\n                .remove([filePath]);\n                \n              if (storageError) {\n                console.error('Storage deletion error:', storageError);\n              } else {\n                console.log('Old image deleted successfully:', deleteData);\n              }\n            } else {\n              console.warn('Could not find recipe-images bucket in URL path');\n              \n              // Alternative approach\n              const urlParts = currentImageUrl.split('/');\n              const possibleFilename = urlParts[urlParts.length - 1];\n              \n              if (possibleFilename && possibleFilename.includes('.')) {\n                console.log('Trying alternative path extraction:', possibleFilename);\n                \n                const possiblePaths = [\n                  possibleFilename,\n                  `${user.id}/${possibleFilename}`,\n                ];\n                \n                for (const path of possiblePaths) {\n                  console.log('Trying to delete path:', path);\n                  const { error: altError } = await supabase.storage\n                    .from('recipe-images')\n                    .remove([path]);\n                    \n                  if (!altError) {\n                    console.log('Successfully deleted old image using path:', path);\n                    break;\n                  } else {\n                    console.warn('Failed to delete using path:', path, altError);\n                  }\n                }\n              }\n            }\n          } catch (imageError) {\n            console.error('Error deleting old image:', imageError);\n            // Continue with update even if old image deletion fails\n          }\n        }\n        \n        finalImageUrl = await uploadImage();\n      }\n\n      // Update recipe in database\n      const { error: updateError } = await supabase\n        .from('user_recipes')\n        .update({\n          title: title.trim(),\n          category: category,\n          ingredients: validIngredients,\n          steps: validSteps,\n          image_url: finalImageUrl,\n          updated_at: new Date().toISOString(),\n        })\n        .eq('id', recipeId)\n        .eq('user_id', user.id);\n\n      if (updateError) {\n        throw updateError;\n      }\n\n      setSuccess('Recipe updated successfully!');\n      \n      // Redirect to my recipes after a short delay\n      setTimeout(() => {\n        const userUsername = getUsernameForUrl(user, profile);\n        navigate(generateMyRecipesUrl(userUsername));\n      }, 2000);\n\n    } catch (err) {\n      console.error('Error updating recipe:', err);\n      setError(`Failed to update recipe: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (pageLoading) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"create-recipe-page\">\n          <div className=\"create-recipe-container\">\n            <div className=\"loading-state\">\n              <div className=\"spinner\"></div>\n              <p>Loading recipe...</p>\n            </div>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Navigation />\n      <div className=\"create-recipe-page\">\n        <div className=\"create-recipe-container\">\n          <div className=\"page-header\">\n            <h1 className=\"page-title\">Edit Recipe</h1>\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          {success && (\n            <div className=\"success-message\">\n              {success}\n            </div>\n          )}\n\n          <form onSubmit={handleSubmit} className=\"recipe-form\">\n            {/* Recipe Title */}\n            <div className=\"form-group\">\n              <label htmlFor=\"title\" className=\"form-label\">Recipe Title *</label>\n              <input\n                type=\"text\"\n                id=\"title\"\n                value={title}\n                onChange={(e) => setTitle(e.target.value)}\n                className=\"form-input\"\n                placeholder=\"Enter recipe title\"\n                required\n              />\n            </div>\n\n            {/* Category */}\n            <div className=\"form-group\">\n              <label htmlFor=\"category\" className=\"form-label\">Category *</label>\n              <select\n                id=\"category\"\n                value={category}\n                onChange={(e) => setCategory(e.target.value)}\n                className=\"form-select\"\n                required\n              >\n                <option value=\"\">Select a category</option>\n                {categories.map((cat) => (\n                  <option key={cat.id} value={cat.name}>\n                    {cat.name}\n                  </option>\n                ))}\n              </select>\n            </div>\n\n            {/* Recipe Image */}\n            <div className=\"form-group\">\n              <label htmlFor=\"image\" className=\"form-label\">Recipe Image</label>\n              <input\n                type=\"file\"\n                id=\"image\"\n                accept=\"image/*\"\n                onChange={handleImageChange}\n                className=\"form-input file-input\"\n              />\n              {(imageUrl || currentImageUrl) && (\n                <div className=\"image-preview\">\n                  <img \n                    src={imageUrl || currentImageUrl} \n                    alt=\"Recipe preview\" \n                    className=\"preview-image\"\n                  />\n                </div>\n              )}\n            </div>\n\n            {/* Ingredients */}\n            <div className=\"form-group\">\n              <label className=\"form-label\">Ingredients *</label>\n              <div className=\"dynamic-list\">\n                {ingredients.map((ingredient, index) => (\n                  <div key={index} className=\"list-item\">\n                    <input\n                      type=\"text\"\n                      value={ingredient}\n                      onChange={(e) => updateIngredient(index, e.target.value)}\n                      className=\"form-input\"\n                      placeholder={`Ingredient ${index + 1}`}\n                    />\n                    {ingredients.length > 1 && (\n                      <button\n                        type=\"button\"\n                        onClick={() => removeIngredient(index)}\n                        className=\"remove-btn\"\n                        title=\"Remove ingredient\"\n                      >\n                        ×\n                      </button>\n                    )}\n                  </div>\n                ))}\n                <button\n                  type=\"button\"\n                  onClick={addIngredient}\n                  className=\"add-btn\"\n                >\n                  + Add Ingredient\n                </button>\n              </div>\n            </div>\n\n            {/* Steps */}\n            <div className=\"form-group\">\n              <label className=\"form-label\">Cooking Steps *</label>\n              <div className=\"dynamic-list\">\n                {steps.map((step, index) => (\n                  <div key={index} className=\"list-item\">\n                    <textarea\n                      value={step}\n                      onChange={(e) => updateStep(index, e.target.value)}\n                      className=\"form-textarea\"\n                      placeholder={`Step ${index + 1}`}\n                      rows=\"3\"\n                    />\n                    {steps.length > 1 && (\n                      <button\n                        type=\"button\"\n                        onClick={() => removeStep(index)}\n                        className=\"remove-btn\"\n                        title=\"Remove step\"\n                      >\n                        ×\n                      </button>\n                    )}\n                  </div>\n                ))}\n                <button\n                  type=\"button\"\n                  onClick={addStep}\n                  className=\"add-btn\"\n                >\n                  + Add Step\n                </button>\n              </div>\n            </div>\n\n            {/* Submit Button */}\n            <div className=\"form-actions\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  const userUsername = getUsernameForUrl(user, profile);\n                  navigate(generateMyRecipesUrl(userUsername));\n                }}\n                className=\"cancel-btn\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                disabled={loading}\n                className=\"submit-btn\"\n              >\n                {loading ? 'Updating Recipe...' : 'Update Recipe'}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default EditRecipe;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}