{"ast":null,"code":"var _jsxFileName = \"/Users/habeebsait/Apps/food_app/recipe-app-web/src/pages/CreateRecipe.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport Navigation from '../components/Navigation';\nimport { generateMyRecipesUrl, getUsernameForUrl } from '../utils/urlUtils';\nimport './CreateRecipe.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction CreateRecipe() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('');\n  const [ingredients, setIngredients] = useState(['']);\n  const [steps, setSteps] = useState(['']);\n  const [image, setImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  const [categories, setCategories] = useState([]);\n  const navigate = useNavigate();\n\n  // Cleanup preview URL when component unmounts or image changes\n  useEffect(() => {\n    return () => {\n      if (imageUrl && imageUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(imageUrl);\n      }\n    };\n  }, [imageUrl]);\n  useEffect(() => {\n    async function loadUserAndCategories() {\n      // Check authentication\n      const {\n        data: {\n          user: currentUser\n        }\n      } = await supabase.auth.getUser();\n      setUser(currentUser);\n      if (!currentUser) {\n        navigate('/');\n        return;\n      }\n\n      // Load user profile\n      try {\n        const {\n          data: userProfile,\n          error: profileError\n        } = await supabase.from('profiles').select('username, full_name').eq('id', currentUser.id).single();\n        if (profileError && profileError.code !== 'PGRST116') {\n          console.error('Error loading profile:', profileError);\n        } else {\n          setProfile(userProfile);\n        }\n      } catch (err) {\n        console.error('Error loading profile:', err);\n      }\n\n      // Load categories\n      try {\n        const {\n          data: categoryData,\n          error: categoryError\n        } = await supabase.from('categories').select('id, name').order('name');\n        if (!categoryError) {\n          setCategories(categoryData || []);\n        }\n      } catch (err) {\n        console.error('Error loading categories:', err);\n      }\n    }\n    loadUserAndCategories();\n  }, [navigate]);\n  const handleImageChange = e => {\n    var _e$target$files;\n    const file = (_e$target$files = e.target.files) === null || _e$target$files === void 0 ? void 0 : _e$target$files[0];\n    if (!file) return;\n\n    // Clean up previous preview URL\n    if (imageUrl && imageUrl.startsWith('blob:')) {\n      URL.revokeObjectURL(imageUrl);\n    }\n\n    // Store the file and create a new preview URL\n    setImage(file);\n    const previewUrl = URL.createObjectURL(file);\n    setImageUrl(previewUrl);\n  };\n\n  // Array handling functions for ingredients\n  const handleIngredientChange = (index, value) => {\n    const newIngredients = [...ingredients];\n    newIngredients[index] = value;\n    setIngredients(newIngredients);\n  };\n  const addIngredient = () => {\n    setIngredients([...ingredients, '']);\n  };\n  const removeIngredient = index => {\n    if (ingredients.length > 1) {\n      const newIngredients = ingredients.filter((_, i) => i !== index);\n      setIngredients(newIngredients);\n    }\n  };\n\n  // Array handling functions for steps\n  const handleStepChange = (index, value) => {\n    const newSteps = [...steps];\n    newSteps[index] = value;\n    setSteps(newSteps);\n  };\n  const addStep = () => {\n    setSteps([...steps, '']);\n  };\n  const removeStep = index => {\n    if (steps.length > 1) {\n      const newSteps = steps.filter((_, i) => i !== index);\n      setSteps(newSteps);\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!user) {\n      setError('Please sign in to create a recipe');\n      return;\n    }\n\n    // Validate form fields\n    const validIngredients = ingredients.filter(ing => ing.trim() !== '');\n    const validSteps = steps.filter(step => step.trim() !== '');\n    if (!title.trim() || !category.trim() || validIngredients.length === 0 || validSteps.length === 0) {\n      setError('Please fill in all required fields and add at least one ingredient and one step');\n      return;\n    }\n    try {\n      setLoading(true);\n      setError('');\n\n      // Verify user authentication before proceeding\n      const {\n        data: {\n          user: currentUser\n        },\n        error: authError\n      } = await supabase.auth.getUser();\n      if (authError || !currentUser) {\n        throw new Error('Authentication required. Please sign in again.');\n      }\n      let finalImageUrl = null;\n\n      // Upload image if one is selected\n      if (image) {\n        try {\n          const fileExt = image.name.split('.').pop();\n          const fileName = `recipe_${currentUser.id}_${Date.now()}.${fileExt}`;\n          const {\n            error: uploadError\n          } = await supabase.storage.from('recipe-images').upload(fileName, image, {\n            cacheControl: '3600',\n            upsert: true\n          });\n          if (uploadError) throw uploadError;\n          const {\n            data\n          } = supabase.storage.from('recipe-images').getPublicUrl(fileName);\n          finalImageUrl = data.publicUrl;\n        } catch (uploadErr) {\n          console.error('Image upload error:', uploadErr);\n          throw new Error(`Failed to upload image: ${uploadErr.message}`);\n        }\n      }\n      const selectedCategory = categories.find(cat => cat.name === category);\n\n      // Filter out empty entries and trim whitespace\n      const cleanIngredients = ingredients.filter(ing => ing.trim() !== '').map(ing => ing.trim());\n      const cleanSteps = steps.filter(step => step.trim() !== '').map(step => step.trim());\n      const recipeData = {\n        user_id: currentUser.id,\n        // Use currentUser.id to ensure latest auth state\n        title: title.trim(),\n        category: category.trim(),\n        category_id: (selectedCategory === null || selectedCategory === void 0 ? void 0 : selectedCategory.id) || null,\n        ingredients: cleanIngredients,\n        steps: cleanSteps,\n        image_url: finalImageUrl\n      };\n      console.log('Inserting recipe data:', recipeData); // For debugging\n\n      const {\n        data,\n        error: insertError\n      } = await supabase.from('user_recipes').insert([recipeData]).select().single();\n      if (insertError) {\n        console.error('Insert error details:', insertError);\n        throw insertError;\n      }\n      console.log('Recipe created successfully:', data); // For debugging\n\n      // Clean up preview URL since we've successfully uploaded the actual image\n      if (imageUrl && imageUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(imageUrl);\n      }\n      setSuccess('Recipe created successfully!');\n\n      // Redirect to My Recipes after a short delay\n      setTimeout(() => {\n        const username = getUsernameForUrl(currentUser, profile);\n        navigate(generateMyRecipesUrl(username));\n      }, 1500);\n    } catch (err) {\n      console.error('Error creating recipe:', err);\n      setError(`Failed to create recipe: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-recipe-page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"create-recipe-container\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Please sign in to create recipes.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"create-recipe-page\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"create-recipe-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"page-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"page-title\",\n            children: \"Create New Recipe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"recipe-btn recipe-btn-secondary\",\n            onClick: () => {\n              const username = getUsernameForUrl(user, profile);\n              navigate(generateMyRecipesUrl(username));\n            },\n            children: \"\\u2190 Back to My Recipes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"error-message\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 13\n        }, this), success && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"success-message\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"recipe-form\",\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Basic Information\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"title\",\n                children: \"Recipe Title *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"title\",\n                type: \"text\",\n                value: title,\n                onChange: e => setTitle(e.target.value),\n                placeholder: \"Enter recipe title\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"category\",\n                children: \"Category *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"category\",\n                type: \"text\",\n                list: \"categories\",\n                value: category,\n                onChange: e => setCategory(e.target.value),\n                placeholder: \"Enter or select category\",\n                required: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"datalist\", {\n                id: \"categories\",\n                children: categories.map(cat => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: cat.name\n                }, cat.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"image\",\n                children: \"Recipe Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"image\",\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleImageChange,\n                className: \"file-input\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this), imageUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"image-preview\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: imageUrl,\n                  alt: \"Recipe preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Ingredients\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Ingredients List *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"array-inputs\",\n                children: [ingredients.map((ingredient, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"array-input-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"text\",\n                    value: ingredient,\n                    onChange: e => handleIngredientChange(index, e.target.value),\n                    placeholder: `Ingredient ${index + 1}`,\n                    className: \"array-input\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 339,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => removeIngredient(index),\n                    className: \"remove-btn\",\n                    disabled: ingredients.length === 1,\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: addIngredient,\n                  className: \"add-btn\",\n                  children: \"Add Ingredient\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 332,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-section\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Instructions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 368,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Cooking Steps *\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"array-inputs\",\n                children: [steps.map((step, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"array-input-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"step-number\",\n                    children: [index + 1, \".\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 374,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    value: step,\n                    onChange: e => handleStepChange(index, e.target.value),\n                    placeholder: `Step ${index + 1} instructions`,\n                    className: \"array-textarea\",\n                    rows: 3\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    type: \"button\",\n                    onClick: () => removeStep(index),\n                    className: \"remove-btn\",\n                    disabled: steps.length === 1,\n                    children: \"Remove\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 382,\n                    columnNumber: 23\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 373,\n                  columnNumber: 21\n                }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  onClick: addStep,\n                  className: \"add-btn\",\n                  children: \"Add Step\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 392,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-actions\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"recipe-btn recipe-btn-secondary\",\n              onClick: () => {\n                const username = getUsernameForUrl(user, profile);\n                navigate(generateMyRecipesUrl(username));\n              },\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"recipe-btn recipe-btn-primary\",\n              disabled: loading,\n              children: loading ? 'Creating...' : 'Create Recipe'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(CreateRecipe, \"Reui2cb2NCIlQnLF860QL/VL86E=\", false, function () {\n  return [useNavigate];\n});\n_c = CreateRecipe;\nexport default CreateRecipe;\nvar _c;\n$RefreshReg$(_c, \"CreateRecipe\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","supabase","Navigation","generateMyRecipesUrl","getUsernameForUrl","jsxDEV","_jsxDEV","Fragment","_Fragment","CreateRecipe","_s","user","setUser","profile","setProfile","loading","setLoading","error","setError","success","setSuccess","title","setTitle","category","setCategory","ingredients","setIngredients","steps","setSteps","image","setImage","imageUrl","setImageUrl","categories","setCategories","navigate","startsWith","URL","revokeObjectURL","loadUserAndCategories","data","currentUser","auth","getUser","userProfile","profileError","from","select","eq","id","single","code","console","err","categoryData","categoryError","order","handleImageChange","e","_e$target$files","file","target","files","previewUrl","createObjectURL","handleIngredientChange","index","value","newIngredients","addIngredient","removeIngredient","length","filter","_","i","handleStepChange","newSteps","addStep","removeStep","handleSubmit","preventDefault","validIngredients","ing","trim","validSteps","step","authError","Error","finalImageUrl","fileExt","name","split","pop","fileName","Date","now","uploadError","storage","upload","cacheControl","upsert","getPublicUrl","publicUrl","uploadErr","message","selectedCategory","find","cat","cleanIngredients","map","cleanSteps","recipeData","user_id","category_id","image_url","log","insertError","insert","setTimeout","username","children","_jsxFileName","lineNumber","columnNumber","className","type","onClick","onSubmit","htmlFor","onChange","placeholder","required","list","accept","src","alt","ingredient","disabled","rows","_c","$RefreshReg$"],"sources":["/Users/habeebsait/Apps/food_app/recipe-app-web/src/pages/CreateRecipe.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { supabase } from '../supabaseClient';\nimport Navigation from '../components/Navigation';\nimport { generateMyRecipesUrl, getUsernameForUrl } from '../utils/urlUtils';\nimport './CreateRecipe.css';\n\nfunction CreateRecipe() {\n  const [user, setUser] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  \n  const [title, setTitle] = useState('');\n  const [category, setCategory] = useState('');\n  const [ingredients, setIngredients] = useState(['']);\n  const [steps, setSteps] = useState(['']);\n  const [image, setImage] = useState(null);\n  const [imageUrl, setImageUrl] = useState('');\n  \n  const [categories, setCategories] = useState([]);\n  \n  const navigate = useNavigate();\n\n  // Cleanup preview URL when component unmounts or image changes\n  useEffect(() => {\n    return () => {\n      if (imageUrl && imageUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(imageUrl);\n      }\n    };\n  }, [imageUrl]);\n\n  useEffect(() => {\n    async function loadUserAndCategories() {\n      // Check authentication\n      const { data: { user: currentUser } } = await supabase.auth.getUser();\n      setUser(currentUser);\n      \n      if (!currentUser) {\n        navigate('/');\n        return;\n      }\n\n      // Load user profile\n      try {\n        const { data: userProfile, error: profileError } = await supabase\n          .from('profiles')\n          .select('username, full_name')\n          .eq('id', currentUser.id)\n          .single();\n\n        if (profileError && profileError.code !== 'PGRST116') {\n          console.error('Error loading profile:', profileError);\n        } else {\n          setProfile(userProfile);\n        }\n      } catch (err) {\n        console.error('Error loading profile:', err);\n      }\n\n      // Load categories\n      try {\n        const { data: categoryData, error: categoryError } = await supabase\n          .from('categories')\n          .select('id, name')\n          .order('name');\n        \n        if (!categoryError) {\n          setCategories(categoryData || []);\n        }\n      } catch (err) {\n        console.error('Error loading categories:', err);\n      }\n    }\n\n    loadUserAndCategories();\n  }, [navigate]);\n\n  const handleImageChange = (e) => {\n    const file = e.target.files?.[0];\n    if (!file) return;\n    \n    // Clean up previous preview URL\n    if (imageUrl && imageUrl.startsWith('blob:')) {\n      URL.revokeObjectURL(imageUrl);\n    }\n    \n    // Store the file and create a new preview URL\n    setImage(file);\n    const previewUrl = URL.createObjectURL(file);\n    setImageUrl(previewUrl);\n  };\n\n  // Array handling functions for ingredients\n  const handleIngredientChange = (index, value) => {\n    const newIngredients = [...ingredients];\n    newIngredients[index] = value;\n    setIngredients(newIngredients);\n  };\n\n  const addIngredient = () => {\n    setIngredients([...ingredients, '']);\n  };\n\n  const removeIngredient = (index) => {\n    if (ingredients.length > 1) {\n      const newIngredients = ingredients.filter((_, i) => i !== index);\n      setIngredients(newIngredients);\n    }\n  };\n\n  // Array handling functions for steps\n  const handleStepChange = (index, value) => {\n    const newSteps = [...steps];\n    newSteps[index] = value;\n    setSteps(newSteps);\n  };\n\n  const addStep = () => {\n    setSteps([...steps, '']);\n  };\n\n  const removeStep = (index) => {\n    if (steps.length > 1) {\n      const newSteps = steps.filter((_, i) => i !== index);\n      setSteps(newSteps);\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    \n    if (!user) {\n      setError('Please sign in to create a recipe');\n      return;\n    }\n\n    // Validate form fields\n    const validIngredients = ingredients.filter(ing => ing.trim() !== '');\n    const validSteps = steps.filter(step => step.trim() !== '');\n    \n    if (!title.trim() || !category.trim() || validIngredients.length === 0 || validSteps.length === 0) {\n      setError('Please fill in all required fields and add at least one ingredient and one step');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError('');\n      \n      // Verify user authentication before proceeding\n      const { data: { user: currentUser }, error: authError } = await supabase.auth.getUser();\n      if (authError || !currentUser) {\n        throw new Error('Authentication required. Please sign in again.');\n      }\n      \n      let finalImageUrl = null;\n      \n      // Upload image if one is selected\n      if (image) {\n        try {\n          const fileExt = image.name.split('.').pop();\n          const fileName = `recipe_${currentUser.id}_${Date.now()}.${fileExt}`;\n          \n          const { error: uploadError } = await supabase.storage\n            .from('recipe-images')\n            .upload(fileName, image, { \n              cacheControl: '3600',\n              upsert: true \n            });\n          \n          if (uploadError) throw uploadError;\n\n          const { data } = supabase.storage.from('recipe-images').getPublicUrl(fileName);\n          finalImageUrl = data.publicUrl;\n          \n        } catch (uploadErr) {\n          console.error('Image upload error:', uploadErr);\n          throw new Error(`Failed to upload image: ${uploadErr.message}`);\n        }\n      }\n      \n      const selectedCategory = categories.find(cat => cat.name === category);\n      \n      // Filter out empty entries and trim whitespace\n      const cleanIngredients = ingredients.filter(ing => ing.trim() !== '').map(ing => ing.trim());\n      const cleanSteps = steps.filter(step => step.trim() !== '').map(step => step.trim());\n      \n      const recipeData = {\n        user_id: currentUser.id, // Use currentUser.id to ensure latest auth state\n        title: title.trim(),\n        category: category.trim(),\n        category_id: selectedCategory?.id || null,\n        ingredients: cleanIngredients,\n        steps: cleanSteps,\n        image_url: finalImageUrl\n      };\n\n      console.log('Inserting recipe data:', recipeData); // For debugging\n\n      const { data, error: insertError } = await supabase\n        .from('user_recipes')\n        .insert([recipeData])\n        .select()\n        .single();\n\n      if (insertError) {\n        console.error('Insert error details:', insertError);\n        throw insertError;\n      }\n\n      console.log('Recipe created successfully:', data); // For debugging\n\n      // Clean up preview URL since we've successfully uploaded the actual image\n      if (imageUrl && imageUrl.startsWith('blob:')) {\n        URL.revokeObjectURL(imageUrl);\n      }\n\n      setSuccess('Recipe created successfully!');\n      \n      // Redirect to My Recipes after a short delay\n      setTimeout(() => {\n        const username = getUsernameForUrl(currentUser, profile);\n        navigate(generateMyRecipesUrl(username));\n      }, 1500);\n      \n    } catch (err) {\n      console.error('Error creating recipe:', err);\n      setError(`Failed to create recipe: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  if (!user) {\n    return (\n      <>\n        <Navigation />\n        <div className=\"create-recipe-page\">\n          <div className=\"create-recipe-container\">\n            <p>Please sign in to create recipes.</p>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Navigation />\n      <div className=\"create-recipe-page\">\n        <div className=\"create-recipe-container\">\n          <div className=\"page-header\">\n            <h2 className=\"page-title\">Create New Recipe</h2>\n            <button \n              type=\"button\"\n              className=\"recipe-btn recipe-btn-secondary\"\n              onClick={() => {\n                const username = getUsernameForUrl(user, profile);\n                navigate(generateMyRecipesUrl(username));\n              }}\n            >\n              ← Back to My Recipes\n            </button>\n          </div>\n\n          {error && (\n            <div className=\"error-message\">\n              {error}\n            </div>\n          )}\n\n          {success && (\n            <div className=\"success-message\">\n              {success}\n            </div>\n          )}\n\n          <form className=\"recipe-form\" onSubmit={handleSubmit}>\n            <div className=\"form-section\">\n              <h3>Basic Information</h3>\n              \n              <div className=\"form-group\">\n                <label htmlFor=\"title\">Recipe Title *</label>\n                <input\n                  id=\"title\"\n                  type=\"text\"\n                  value={title}\n                  onChange={(e) => setTitle(e.target.value)}\n                  placeholder=\"Enter recipe title\"\n                  required\n                />\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"category\">Category *</label>\n                <input\n                  id=\"category\"\n                  type=\"text\"\n                  list=\"categories\"\n                  value={category}\n                  onChange={(e) => setCategory(e.target.value)}\n                  placeholder=\"Enter or select category\"\n                  required\n                />\n                <datalist id=\"categories\">\n                  {categories.map(cat => (\n                    <option key={cat.id} value={cat.name} />\n                  ))}\n                </datalist>\n              </div>\n\n              <div className=\"form-group\">\n                <label htmlFor=\"image\">Recipe Image</label>\n                <input\n                  id=\"image\"\n                  type=\"file\"\n                  accept=\"image/*\"\n                  onChange={handleImageChange}\n                  className=\"file-input\"\n                />\n                {imageUrl && (\n                  <div className=\"image-preview\">\n                    <img src={imageUrl} alt=\"Recipe preview\" />\n                  </div>\n                )}\n              </div>\n            </div>\n\n            <div className=\"form-section\">\n              <h3>Ingredients</h3>\n              <div className=\"form-group\">\n                <label>Ingredients List *</label>\n                <div className=\"array-inputs\">\n                  {ingredients.map((ingredient, index) => (\n                    <div key={index} className=\"array-input-row\">\n                      <input\n                        type=\"text\"\n                        value={ingredient}\n                        onChange={(e) => handleIngredientChange(index, e.target.value)}\n                        placeholder={`Ingredient ${index + 1}`}\n                        className=\"array-input\"\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => removeIngredient(index)}\n                        className=\"remove-btn\"\n                        disabled={ingredients.length === 1}\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  ))}\n                  <button\n                    type=\"button\"\n                    onClick={addIngredient}\n                    className=\"add-btn\"\n                  >\n                    Add Ingredient\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-section\">\n              <h3>Instructions</h3>\n              <div className=\"form-group\">\n                <label>Cooking Steps *</label>\n                <div className=\"array-inputs\">\n                  {steps.map((step, index) => (\n                    <div key={index} className=\"array-input-row\">\n                      <div className=\"step-number\">{index + 1}.</div>\n                      <textarea\n                        value={step}\n                        onChange={(e) => handleStepChange(index, e.target.value)}\n                        placeholder={`Step ${index + 1} instructions`}\n                        className=\"array-textarea\"\n                        rows={3}\n                      />\n                      <button\n                        type=\"button\"\n                        onClick={() => removeStep(index)}\n                        className=\"remove-btn\"\n                        disabled={steps.length === 1}\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  ))}\n                  <button\n                    type=\"button\"\n                    onClick={addStep}\n                    className=\"add-btn\"\n                  >\n                    Add Step\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"form-actions\">\n              <button \n                type=\"button\" \n                className=\"recipe-btn recipe-btn-secondary\"\n                onClick={() => {\n                  const username = getUsernameForUrl(user, profile);\n                  navigate(generateMyRecipesUrl(username));\n                }}\n              >\n                Cancel\n              </button>\n              <button \n                type=\"submit\" \n                className=\"recipe-btn recipe-btn-primary\"\n                disabled={loading}\n              >\n                {loading ? 'Creating...' : 'Create Recipe'}\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default CreateRecipe;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,OAAOC,UAAU,MAAM,0BAA0B;AACjD,SAASC,oBAAoB,EAAEC,iBAAiB,QAAQ,mBAAmB;AAC3E,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE5B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACe,OAAO,EAAEC,UAAU,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqB,OAAO,EAAEC,UAAU,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACyB,QAAQ,EAAEC,WAAW,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAAC2B,WAAW,EAAEC,cAAc,CAAC,GAAG5B,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACpD,MAAM,CAAC6B,KAAK,EAAEC,QAAQ,CAAC,GAAG9B,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;EACxC,MAAM,CAAC+B,KAAK,EAAEC,QAAQ,CAAC,GAAGhC,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACiC,QAAQ,EAAEC,WAAW,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAM,CAACmC,UAAU,EAAEC,aAAa,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMqC,QAAQ,GAAGnC,WAAW,CAAC,CAAC;;EAE9B;EACAD,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX,IAAIgC,QAAQ,IAAIA,QAAQ,CAACK,UAAU,CAAC,OAAO,CAAC,EAAE;QAC5CC,GAAG,CAACC,eAAe,CAACP,QAAQ,CAAC;MAC/B;IACF,CAAC;EACH,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;EAEdhC,SAAS,CAAC,MAAM;IACd,eAAewC,qBAAqBA,CAAA,EAAG;MACrC;MACA,MAAM;QAAEC,IAAI,EAAE;UAAE7B,IAAI,EAAE8B;QAAY;MAAE,CAAC,GAAG,MAAMxC,QAAQ,CAACyC,IAAI,CAACC,OAAO,CAAC,CAAC;MACrE/B,OAAO,CAAC6B,WAAW,CAAC;MAEpB,IAAI,CAACA,WAAW,EAAE;QAChBN,QAAQ,CAAC,GAAG,CAAC;QACb;MACF;;MAEA;MACA,IAAI;QACF,MAAM;UAAEK,IAAI,EAAEI,WAAW;UAAE3B,KAAK,EAAE4B;QAAa,CAAC,GAAG,MAAM5C,QAAQ,CAC9D6C,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,qBAAqB,CAAC,CAC7BC,EAAE,CAAC,IAAI,EAAEP,WAAW,CAACQ,EAAE,CAAC,CACxBC,MAAM,CAAC,CAAC;QAEX,IAAIL,YAAY,IAAIA,YAAY,CAACM,IAAI,KAAK,UAAU,EAAE;UACpDC,OAAO,CAACnC,KAAK,CAAC,wBAAwB,EAAE4B,YAAY,CAAC;QACvD,CAAC,MAAM;UACL/B,UAAU,CAAC8B,WAAW,CAAC;QACzB;MACF,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZD,OAAO,CAACnC,KAAK,CAAC,wBAAwB,EAAEoC,GAAG,CAAC;MAC9C;;MAEA;MACA,IAAI;QACF,MAAM;UAAEb,IAAI,EAAEc,YAAY;UAAErC,KAAK,EAAEsC;QAAc,CAAC,GAAG,MAAMtD,QAAQ,CAChE6C,IAAI,CAAC,YAAY,CAAC,CAClBC,MAAM,CAAC,UAAU,CAAC,CAClBS,KAAK,CAAC,MAAM,CAAC;QAEhB,IAAI,CAACD,aAAa,EAAE;UAClBrB,aAAa,CAACoB,YAAY,IAAI,EAAE,CAAC;QACnC;MACF,CAAC,CAAC,OAAOD,GAAG,EAAE;QACZD,OAAO,CAACnC,KAAK,CAAC,2BAA2B,EAAEoC,GAAG,CAAC;MACjD;IACF;IAEAd,qBAAqB,CAAC,CAAC;EACzB,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMsB,iBAAiB,GAAIC,CAAC,IAAK;IAAA,IAAAC,eAAA;IAC/B,MAAMC,IAAI,IAAAD,eAAA,GAAGD,CAAC,CAACG,MAAM,CAACC,KAAK,cAAAH,eAAA,uBAAdA,eAAA,CAAiB,CAAC,CAAC;IAChC,IAAI,CAACC,IAAI,EAAE;;IAEX;IACA,IAAI7B,QAAQ,IAAIA,QAAQ,CAACK,UAAU,CAAC,OAAO,CAAC,EAAE;MAC5CC,GAAG,CAACC,eAAe,CAACP,QAAQ,CAAC;IAC/B;;IAEA;IACAD,QAAQ,CAAC8B,IAAI,CAAC;IACd,MAAMG,UAAU,GAAG1B,GAAG,CAAC2B,eAAe,CAACJ,IAAI,CAAC;IAC5C5B,WAAW,CAAC+B,UAAU,CAAC;EACzB,CAAC;;EAED;EACA,MAAME,sBAAsB,GAAGA,CAACC,KAAK,EAAEC,KAAK,KAAK;IAC/C,MAAMC,cAAc,GAAG,CAAC,GAAG3C,WAAW,CAAC;IACvC2C,cAAc,CAACF,KAAK,CAAC,GAAGC,KAAK;IAC7BzC,cAAc,CAAC0C,cAAc,CAAC;EAChC,CAAC;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B3C,cAAc,CAAC,CAAC,GAAGD,WAAW,EAAE,EAAE,CAAC,CAAC;EACtC,CAAC;EAED,MAAM6C,gBAAgB,GAAIJ,KAAK,IAAK;IAClC,IAAIzC,WAAW,CAAC8C,MAAM,GAAG,CAAC,EAAE;MAC1B,MAAMH,cAAc,GAAG3C,WAAW,CAAC+C,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKR,KAAK,CAAC;MAChExC,cAAc,CAAC0C,cAAc,CAAC;IAChC;EACF,CAAC;;EAED;EACA,MAAMO,gBAAgB,GAAGA,CAACT,KAAK,EAAEC,KAAK,KAAK;IACzC,MAAMS,QAAQ,GAAG,CAAC,GAAGjD,KAAK,CAAC;IAC3BiD,QAAQ,CAACV,KAAK,CAAC,GAAGC,KAAK;IACvBvC,QAAQ,CAACgD,QAAQ,CAAC;EACpB,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM;IACpBjD,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE,EAAE,CAAC,CAAC;EAC1B,CAAC;EAED,MAAMmD,UAAU,GAAIZ,KAAK,IAAK;IAC5B,IAAIvC,KAAK,CAAC4C,MAAM,GAAG,CAAC,EAAE;MACpB,MAAMK,QAAQ,GAAGjD,KAAK,CAAC6C,MAAM,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,KAAKR,KAAK,CAAC;MACpDtC,QAAQ,CAACgD,QAAQ,CAAC;IACpB;EACF,CAAC;EAED,MAAMG,YAAY,GAAG,MAAOrB,CAAC,IAAK;IAChCA,CAAC,CAACsB,cAAc,CAAC,CAAC;IAElB,IAAI,CAACrE,IAAI,EAAE;MACTO,QAAQ,CAAC,mCAAmC,CAAC;MAC7C;IACF;;IAEA;IACA,MAAM+D,gBAAgB,GAAGxD,WAAW,CAAC+C,MAAM,CAACU,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IACrE,MAAMC,UAAU,GAAGzD,KAAK,CAAC6C,MAAM,CAACa,IAAI,IAAIA,IAAI,CAACF,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC;IAE3D,IAAI,CAAC9D,KAAK,CAAC8D,IAAI,CAAC,CAAC,IAAI,CAAC5D,QAAQ,CAAC4D,IAAI,CAAC,CAAC,IAAIF,gBAAgB,CAACV,MAAM,KAAK,CAAC,IAAIa,UAAU,CAACb,MAAM,KAAK,CAAC,EAAE;MACjGrD,QAAQ,CAAC,iFAAiF,CAAC;MAC3F;IACF;IAEA,IAAI;MACFF,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,EAAE,CAAC;;MAEZ;MACA,MAAM;QAAEsB,IAAI,EAAE;UAAE7B,IAAI,EAAE8B;QAAY,CAAC;QAAExB,KAAK,EAAEqE;MAAU,CAAC,GAAG,MAAMrF,QAAQ,CAACyC,IAAI,CAACC,OAAO,CAAC,CAAC;MACvF,IAAI2C,SAAS,IAAI,CAAC7C,WAAW,EAAE;QAC7B,MAAM,IAAI8C,KAAK,CAAC,gDAAgD,CAAC;MACnE;MAEA,IAAIC,aAAa,GAAG,IAAI;;MAExB;MACA,IAAI3D,KAAK,EAAE;QACT,IAAI;UACF,MAAM4D,OAAO,GAAG5D,KAAK,CAAC6D,IAAI,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAC;UAC3C,MAAMC,QAAQ,GAAG,UAAUpD,WAAW,CAACQ,EAAE,IAAI6C,IAAI,CAACC,GAAG,CAAC,CAAC,IAAIN,OAAO,EAAE;UAEpE,MAAM;YAAExE,KAAK,EAAE+E;UAAY,CAAC,GAAG,MAAM/F,QAAQ,CAACgG,OAAO,CAClDnD,IAAI,CAAC,eAAe,CAAC,CACrBoD,MAAM,CAACL,QAAQ,EAAEhE,KAAK,EAAE;YACvBsE,YAAY,EAAE,MAAM;YACpBC,MAAM,EAAE;UACV,CAAC,CAAC;UAEJ,IAAIJ,WAAW,EAAE,MAAMA,WAAW;UAElC,MAAM;YAAExD;UAAK,CAAC,GAAGvC,QAAQ,CAACgG,OAAO,CAACnD,IAAI,CAAC,eAAe,CAAC,CAACuD,YAAY,CAACR,QAAQ,CAAC;UAC9EL,aAAa,GAAGhD,IAAI,CAAC8D,SAAS;QAEhC,CAAC,CAAC,OAAOC,SAAS,EAAE;UAClBnD,OAAO,CAACnC,KAAK,CAAC,qBAAqB,EAAEsF,SAAS,CAAC;UAC/C,MAAM,IAAIhB,KAAK,CAAC,2BAA2BgB,SAAS,CAACC,OAAO,EAAE,CAAC;QACjE;MACF;MAEA,MAAMC,gBAAgB,GAAGxE,UAAU,CAACyE,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACjB,IAAI,KAAKnE,QAAQ,CAAC;;MAEtE;MACA,MAAMqF,gBAAgB,GAAGnF,WAAW,CAAC+C,MAAM,CAACU,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC0B,GAAG,CAAC3B,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC;MAC5F,MAAM2B,UAAU,GAAGnF,KAAK,CAAC6C,MAAM,CAACa,IAAI,IAAIA,IAAI,CAACF,IAAI,CAAC,CAAC,KAAK,EAAE,CAAC,CAAC0B,GAAG,CAACxB,IAAI,IAAIA,IAAI,CAACF,IAAI,CAAC,CAAC,CAAC;MAEpF,MAAM4B,UAAU,GAAG;QACjBC,OAAO,EAAEvE,WAAW,CAACQ,EAAE;QAAE;QACzB5B,KAAK,EAAEA,KAAK,CAAC8D,IAAI,CAAC,CAAC;QACnB5D,QAAQ,EAAEA,QAAQ,CAAC4D,IAAI,CAAC,CAAC;QACzB8B,WAAW,EAAE,CAAAR,gBAAgB,aAAhBA,gBAAgB,uBAAhBA,gBAAgB,CAAExD,EAAE,KAAI,IAAI;QACzCxB,WAAW,EAAEmF,gBAAgB;QAC7BjF,KAAK,EAAEmF,UAAU;QACjBI,SAAS,EAAE1B;MACb,CAAC;MAEDpC,OAAO,CAAC+D,GAAG,CAAC,wBAAwB,EAAEJ,UAAU,CAAC,CAAC,CAAC;;MAEnD,MAAM;QAAEvE,IAAI;QAAEvB,KAAK,EAAEmG;MAAY,CAAC,GAAG,MAAMnH,QAAQ,CAChD6C,IAAI,CAAC,cAAc,CAAC,CACpBuE,MAAM,CAAC,CAACN,UAAU,CAAC,CAAC,CACpBhE,MAAM,CAAC,CAAC,CACRG,MAAM,CAAC,CAAC;MAEX,IAAIkE,WAAW,EAAE;QACfhE,OAAO,CAACnC,KAAK,CAAC,uBAAuB,EAAEmG,WAAW,CAAC;QACnD,MAAMA,WAAW;MACnB;MAEAhE,OAAO,CAAC+D,GAAG,CAAC,8BAA8B,EAAE3E,IAAI,CAAC,CAAC,CAAC;;MAEnD;MACA,IAAIT,QAAQ,IAAIA,QAAQ,CAACK,UAAU,CAAC,OAAO,CAAC,EAAE;QAC5CC,GAAG,CAACC,eAAe,CAACP,QAAQ,CAAC;MAC/B;MAEAX,UAAU,CAAC,8BAA8B,CAAC;;MAE1C;MACAkG,UAAU,CAAC,MAAM;QACf,MAAMC,QAAQ,GAAGnH,iBAAiB,CAACqC,WAAW,EAAE5B,OAAO,CAAC;QACxDsB,QAAQ,CAAChC,oBAAoB,CAACoH,QAAQ,CAAC,CAAC;MAC1C,CAAC,EAAE,IAAI,CAAC;IAEV,CAAC,CAAC,OAAOlE,GAAG,EAAE;MACZD,OAAO,CAACnC,KAAK,CAAC,wBAAwB,EAAEoC,GAAG,CAAC;MAC5CnC,QAAQ,CAAC,4BAA4BmC,GAAG,CAACmD,OAAO,EAAE,CAAC;IACrD,CAAC,SAAS;MACRxF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,IAAI,CAACL,IAAI,EAAE;IACT,oBACEL,OAAA,CAAAE,SAAA;MAAAgH,QAAA,gBACElH,OAAA,CAACJ,UAAU;QAAA2F,QAAA,EAAA4B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdrH,OAAA;QAAKsH,SAAS,EAAC,oBAAoB;QAAAJ,QAAA,eACjClH,OAAA;UAAKsH,SAAS,EAAC,yBAAyB;UAAAJ,QAAA,eACtClH,OAAA;YAAAkH,QAAA,EAAG;UAAiC;YAAA3B,QAAA,EAAA4B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAA9B,QAAA,EAAA4B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC;MAAC;QAAA9B,QAAA,EAAA4B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA,eACN,CAAC;EAEP;EAEA,oBACErH,OAAA,CAAAE,SAAA;IAAAgH,QAAA,gBACElH,OAAA,CAACJ,UAAU;MAAA2F,QAAA,EAAA4B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACdrH,OAAA;MAAKsH,SAAS,EAAC,oBAAoB;MAAAJ,QAAA,eACjClH,OAAA;QAAKsH,SAAS,EAAC,yBAAyB;QAAAJ,QAAA,gBACtClH,OAAA;UAAKsH,SAAS,EAAC,aAAa;UAAAJ,QAAA,gBAC1BlH,OAAA;YAAIsH,SAAS,EAAC,YAAY;YAAAJ,QAAA,EAAC;UAAiB;YAAA3B,QAAA,EAAA4B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjDrH,OAAA;YACEuH,IAAI,EAAC,QAAQ;YACbD,SAAS,EAAC,iCAAiC;YAC3CE,OAAO,EAAEA,CAAA,KAAM;cACb,MAAMP,QAAQ,GAAGnH,iBAAiB,CAACO,IAAI,EAAEE,OAAO,CAAC;cACjDsB,QAAQ,CAAChC,oBAAoB,CAACoH,QAAQ,CAAC,CAAC;YAC1C,CAAE;YAAAC,QAAA,EACH;UAED;YAAA3B,QAAA,EAAA4B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAA9B,QAAA,EAAA4B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,EAEL1G,KAAK,iBACJX,OAAA;UAAKsH,SAAS,EAAC,eAAe;UAAAJ,QAAA,EAC3BvG;QAAK;UAAA4E,QAAA,EAAA4B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CACN,EAEAxG,OAAO,iBACNb,OAAA;UAAKsH,SAAS,EAAC,iBAAiB;UAAAJ,QAAA,EAC7BrG;QAAO;UAAA0E,QAAA,EAAA4B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACL,CACN,eAEDrH,OAAA;UAAMsH,SAAS,EAAC,aAAa;UAACG,QAAQ,EAAEhD,YAAa;UAAAyC,QAAA,gBACnDlH,OAAA;YAAKsH,SAAS,EAAC,cAAc;YAAAJ,QAAA,gBAC3BlH,OAAA;cAAAkH,QAAA,EAAI;YAAiB;cAAA3B,QAAA,EAAA4B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAE1BrH,OAAA;cAAKsH,SAAS,EAAC,YAAY;cAAAJ,QAAA,gBACzBlH,OAAA;gBAAO0H,OAAO,EAAC,OAAO;gBAAAR,QAAA,EAAC;cAAc;gBAAA3B,QAAA,EAAA4B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC7CrH,OAAA;gBACE2C,EAAE,EAAC,OAAO;gBACV4E,IAAI,EAAC,MAAM;gBACX1D,KAAK,EAAE9C,KAAM;gBACb4G,QAAQ,EAAGvE,CAAC,IAAKpC,QAAQ,CAACoC,CAAC,CAACG,MAAM,CAACM,KAAK,CAAE;gBAC1C+D,WAAW,EAAC,oBAAoB;gBAChCC,QAAQ;cAAA;gBAAAtC,QAAA,EAAA4B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC;YAAA;cAAA9B,QAAA,EAAA4B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC,CAAC,eAENrH,OAAA;cAAKsH,SAAS,EAAC,YAAY;cAAAJ,QAAA,gBACzBlH,OAAA;gBAAO0H,OAAO,EAAC,UAAU;gBAAAR,QAAA,EAAC;cAAU;gBAAA3B,QAAA,EAAA4B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC5CrH,OAAA;gBACE2C,EAAE,EAAC,UAAU;gBACb4E,IAAI,EAAC,MAAM;gBACXO,IAAI,EAAC,YAAY;gBACjBjE,KAAK,EAAE5C,QAAS;gBAChB0G,QAAQ,EAAGvE,CAAC,IAAKlC,WAAW,CAACkC,CAAC,CAACG,MAAM,CAACM,KAAK,CAAE;gBAC7C+D,WAAW,EAAC,0BAA0B;gBACtCC,QAAQ;cAAA;gBAAAtC,QAAA,EAAA4B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACT,CAAC,eACFrH,OAAA;gBAAU2C,EAAE,EAAC,YAAY;gBAAAuE,QAAA,EACtBvF,UAAU,CAAC4E,GAAG,CAACF,GAAG,iBACjBrG,OAAA;kBAAqB6D,KAAK,EAAEwC,GAAG,CAACjB;gBAAK,GAAxBiB,GAAG,CAAC1D,EAAE;kBAAA4C,QAAA,EAAA4B,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAoB,CACxC;cAAC;gBAAA9B,QAAA,EAAA4B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACM,CAAC;YAAA;cAAA9B,QAAA,EAAA4B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACR,CAAC,eAENrH,OAAA;cAAKsH,SAAS,EAAC,YAAY;cAAAJ,QAAA,gBACzBlH,OAAA;gBAAO0H,OAAO,EAAC,OAAO;gBAAAR,QAAA,EAAC;cAAY;gBAAA3B,QAAA,EAAA4B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC3CrH,OAAA;gBACE2C,EAAE,EAAC,OAAO;gBACV4E,IAAI,EAAC,MAAM;gBACXQ,MAAM,EAAC,SAAS;gBAChBJ,QAAQ,EAAExE,iBAAkB;gBAC5BmE,SAAS,EAAC;cAAY;gBAAA/B,QAAA,EAAA4B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACvB,CAAC,EACD5F,QAAQ,iBACPzB,OAAA;gBAAKsH,SAAS,EAAC,eAAe;gBAAAJ,QAAA,eAC5BlH,OAAA;kBAAKgI,GAAG,EAAEvG,QAAS;kBAACwG,GAAG,EAAC;gBAAgB;kBAAA1C,QAAA,EAAA4B,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAE;cAAC;gBAAA9B,QAAA,EAAA4B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACxC,CACN;YAAA;cAAA9B,QAAA,EAAA4B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAA9B,QAAA,EAAA4B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENrH,OAAA;YAAKsH,SAAS,EAAC,cAAc;YAAAJ,QAAA,gBAC3BlH,OAAA;cAAAkH,QAAA,EAAI;YAAW;cAAA3B,QAAA,EAAA4B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBrH,OAAA;cAAKsH,SAAS,EAAC,YAAY;cAAAJ,QAAA,gBACzBlH,OAAA;gBAAAkH,QAAA,EAAO;cAAkB;gBAAA3B,QAAA,EAAA4B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eACjCrH,OAAA;gBAAKsH,SAAS,EAAC,cAAc;gBAAAJ,QAAA,GAC1B/F,WAAW,CAACoF,GAAG,CAAC,CAAC2B,UAAU,EAAEtE,KAAK,kBACjC5D,OAAA;kBAAiBsH,SAAS,EAAC,iBAAiB;kBAAAJ,QAAA,gBAC1ClH,OAAA;oBACEuH,IAAI,EAAC,MAAM;oBACX1D,KAAK,EAAEqE,UAAW;oBAClBP,QAAQ,EAAGvE,CAAC,IAAKO,sBAAsB,CAACC,KAAK,EAAER,CAAC,CAACG,MAAM,CAACM,KAAK,CAAE;oBAC/D+D,WAAW,EAAE,cAAchE,KAAK,GAAG,CAAC,EAAG;oBACvC0D,SAAS,EAAC;kBAAa;oBAAA/B,QAAA,EAAA4B,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACxB,CAAC,eACFrH,OAAA;oBACEuH,IAAI,EAAC,QAAQ;oBACbC,OAAO,EAAEA,CAAA,KAAMxD,gBAAgB,CAACJ,KAAK,CAAE;oBACvC0D,SAAS,EAAC,YAAY;oBACtBa,QAAQ,EAAEhH,WAAW,CAAC8C,MAAM,KAAK,CAAE;oBAAAiD,QAAA,EACpC;kBAED;oBAAA3B,QAAA,EAAA4B,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA,GAfDzD,KAAK;kBAAA2B,QAAA,EAAA4B,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAgBV,CACN,CAAC,eACFrH,OAAA;kBACEuH,IAAI,EAAC,QAAQ;kBACbC,OAAO,EAAEzD,aAAc;kBACvBuD,SAAS,EAAC,SAAS;kBAAAJ,QAAA,EACpB;gBAED;kBAAA3B,QAAA,EAAA4B,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAA9B,QAAA,EAAA4B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAA9B,QAAA,EAAA4B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAA9B,QAAA,EAAA4B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENrH,OAAA;YAAKsH,SAAS,EAAC,cAAc;YAAAJ,QAAA,gBAC3BlH,OAAA;cAAAkH,QAAA,EAAI;YAAY;cAAA3B,QAAA,EAAA4B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACrBrH,OAAA;cAAKsH,SAAS,EAAC,YAAY;cAAAJ,QAAA,gBACzBlH,OAAA;gBAAAkH,QAAA,EAAO;cAAe;gBAAA3B,QAAA,EAAA4B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAO,CAAC,eAC9BrH,OAAA;gBAAKsH,SAAS,EAAC,cAAc;gBAAAJ,QAAA,GAC1B7F,KAAK,CAACkF,GAAG,CAAC,CAACxB,IAAI,EAAEnB,KAAK,kBACrB5D,OAAA;kBAAiBsH,SAAS,EAAC,iBAAiB;kBAAAJ,QAAA,gBAC1ClH,OAAA;oBAAKsH,SAAS,EAAC,aAAa;oBAAAJ,QAAA,GAAEtD,KAAK,GAAG,CAAC,EAAC,GAAC;kBAAA;oBAAA2B,QAAA,EAAA4B,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAK,CAAC,eAC/CrH,OAAA;oBACE6D,KAAK,EAAEkB,IAAK;oBACZ4C,QAAQ,EAAGvE,CAAC,IAAKiB,gBAAgB,CAACT,KAAK,EAAER,CAAC,CAACG,MAAM,CAACM,KAAK,CAAE;oBACzD+D,WAAW,EAAE,QAAQhE,KAAK,GAAG,CAAC,eAAgB;oBAC9C0D,SAAS,EAAC,gBAAgB;oBAC1Bc,IAAI,EAAE;kBAAE;oBAAA7C,QAAA,EAAA4B,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OACT,CAAC,eACFrH,OAAA;oBACEuH,IAAI,EAAC,QAAQ;oBACbC,OAAO,EAAEA,CAAA,KAAMhD,UAAU,CAACZ,KAAK,CAAE;oBACjC0D,SAAS,EAAC,YAAY;oBACtBa,QAAQ,EAAE9G,KAAK,CAAC4C,MAAM,KAAK,CAAE;oBAAAiD,QAAA,EAC9B;kBAED;oBAAA3B,QAAA,EAAA4B,YAAA;oBAAAC,UAAA;oBAAAC,YAAA;kBAAA,OAAQ,CAAC;gBAAA,GAhBDzD,KAAK;kBAAA2B,QAAA,EAAA4B,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAiBV,CACN,CAAC,eACFrH,OAAA;kBACEuH,IAAI,EAAC,QAAQ;kBACbC,OAAO,EAAEjD,OAAQ;kBACjB+C,SAAS,EAAC,SAAS;kBAAAJ,QAAA,EACpB;gBAED;kBAAA3B,QAAA,EAAA4B,YAAA;kBAAAC,UAAA;kBAAAC,YAAA;gBAAA,OAAQ,CAAC;cAAA;gBAAA9B,QAAA,EAAA4B,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OACN,CAAC;YAAA;cAAA9B,QAAA,EAAA4B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACH,CAAC;UAAA;YAAA9B,QAAA,EAAA4B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH,CAAC,eAENrH,OAAA;YAAKsH,SAAS,EAAC,cAAc;YAAAJ,QAAA,gBAC3BlH,OAAA;cACEuH,IAAI,EAAC,QAAQ;cACbD,SAAS,EAAC,iCAAiC;cAC3CE,OAAO,EAAEA,CAAA,KAAM;gBACb,MAAMP,QAAQ,GAAGnH,iBAAiB,CAACO,IAAI,EAAEE,OAAO,CAAC;gBACjDsB,QAAQ,CAAChC,oBAAoB,CAACoH,QAAQ,CAAC,CAAC;cAC1C,CAAE;cAAAC,QAAA,EACH;YAED;cAAA3B,QAAA,EAAA4B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACTrH,OAAA;cACEuH,IAAI,EAAC,QAAQ;cACbD,SAAS,EAAC,+BAA+B;cACzCa,QAAQ,EAAE1H,OAAQ;cAAAyG,QAAA,EAEjBzG,OAAO,GAAG,aAAa,GAAG;YAAe;cAAA8E,QAAA,EAAA4B,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACpC,CAAC;UAAA;YAAA9B,QAAA,EAAA4B,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAA9B,QAAA,EAAA4B,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC;MAAA;QAAA9B,QAAA,EAAA4B,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAA9B,QAAA,EAAA4B,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,eACN,CAAC;AAEP;AAACjH,EAAA,CAnaQD,YAAY;EAAA,QAgBFT,WAAW;AAAA;AAAA2I,EAAA,GAhBrBlI,YAAY;AAqarB,eAAeA,YAAY;AAAC,IAAAkI,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}